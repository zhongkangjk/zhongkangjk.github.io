{"meta":{"title":"懒派日志","subtitle":"","description":"懒派大弟子的懒派日志","author":"懒派大弟子","url":"https://zhongkangjk.github.io","root":"/"},"pages":[{"title":"","date":"2021-07-24T15:25:53.999Z","updated":"2021-07-24T15:25:53.999Z","comments":true,"path":"about/index.html","permalink":"https://zhongkangjk.github.io/about/index.html","excerpt":"","text":"这个人很懒，什么也没写"},{"title":"","date":"2021-07-24T15:24:36.199Z","updated":"2021-07-24T15:24:36.199Z","comments":false,"path":"artitalk/index.html","permalink":"https://zhongkangjk.github.io/artitalk/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2021-07-24T15:24:59.788Z","updated":"2021-07-24T15:24:59.788Z","comments":true,"path":"tags/index.html","permalink":"https://zhongkangjk.github.io/tags/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2021-07-24T15:25:01.408Z","updated":"2021-07-24T15:25:01.408Z","comments":true,"path":"categories/index.html","permalink":"https://zhongkangjk.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"django-admin只显示用户关联字段的设置","slug":"django-admin只显示用户关联字段的设置","date":"2022-06-08T01:23:15.000Z","updated":"2022-06-08T01:30:14.184Z","comments":true,"path":"2022/06/08/django-admin只显示用户关联字段的设置/","link":"","permalink":"https://zhongkangjk.github.io/2022/06/08/django-admin%E5%8F%AA%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E5%85%B3%E8%81%94%E5%AD%97%E6%AE%B5%E7%9A%84%E8%AE%BE%E7%BD%AE/","excerpt":"需要只让用户查看自己的数据","text":"需要只让用户查看自己的数据 12345678910111213141516171819202122from django.contrib.auth.models import User关联User字段 = models.ForeignKey(User,on_delete=models.CASCADE,blank=True,null=True)@admin.register(类)class 类管理(ImportExportActionModelAdmin): exclude = (&#x27;关联User字段&#x27;,) def has_change_permission(self, request, obj=None): has_class_permission = super(类管理, self).has_change_permission(request, obj) if not has_class_permission: return False if obj is not None and not request.user.is_superuser and request.user.id != obj.关联User字段.id: return False return True def get_queryset(self, request): if request.user.is_superuser: return 类.objects.all() return 类.objects.filter(关联User字段=request.user) def save_model(self, request, obj, form, change): if not change: obj.关联User字段 = request.user obj.save() 参考：http://loonlog.com/2020/11/19/django-user-admin-author/","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"}]},{"title":"迁移django项目时试水宝塔python管理器中的uwsgi与nginx设置","slug":"迁移django项目时试水宝塔python管理器中的uwsgi与nginx设置","date":"2022-05-27T14:43:51.000Z","updated":"2022-05-27T14:49:35.370Z","comments":true,"path":"2022/05/27/迁移django项目时试水宝塔python管理器中的uwsgi与nginx设置/","link":"","permalink":"https://zhongkangjk.github.io/2022/05/27/%E8%BF%81%E7%A7%BBdjango%E9%A1%B9%E7%9B%AE%E6%97%B6%E8%AF%95%E6%B0%B4%E5%AE%9D%E5%A1%94python%E7%AE%A1%E7%90%86%E5%99%A8%E4%B8%AD%E7%9A%84uwsgi%E4%B8%8Enginx%E8%AE%BE%E7%BD%AE/","excerpt":"直接上非常刺毛，后来只能复刻一下之前的uwsgi配置","text":"直接上非常刺毛，后来只能复刻一下之前的uwsgi配置 python管理器里的uwsgi配置文件12345678910[uwsgi]chdir =项目文件夹绝对路径module =shuai4.wsgihome =项目文件夹绝对路径/**************************_venvmaster =trueprocesses =4socket =127.0.0.1:9090chmod-socket = 666vacuum = truedaemonize = 项目文件夹绝对路径/uwsgi.log nginx配置12345678910111213141516server&#123; listen 暴露给外面的端口; server_name ip或者域名; location /static &#123; alias 项目文件夹绝对路径/collected_static; &#125; location / &#123; include uwsgi_params; uwsgi_pass 127.0.0.1:9090; #须与uwsgi一致 client_max_body_size 20m; &#125; access_log /www/wwwlogs/ip或者域名.log; error_log /www/wwwlogs/ip或者域名.error.log;&#125;","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"django","slug":"计算机/django","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/django/"}],"tags":[{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"},{"name":"uwsgi","slug":"uwsgi","permalink":"https://zhongkangjk.github.io/tags/uwsgi/"},{"name":"nginx","slug":"nginx","permalink":"https://zhongkangjk.github.io/tags/nginx/"}]},{"title":"linux升级sqlite到新的版本","slug":"linux升级sqlite到新的版本","date":"2022-05-27T14:27:48.000Z","updated":"2022-05-27T15:18:12.621Z","comments":true,"path":"2022/05/27/linux升级sqlite到新的版本/","link":"","permalink":"https://zhongkangjk.github.io/2022/05/27/linux%E5%8D%87%E7%BA%A7sqlite%E5%88%B0%E6%96%B0%E7%9A%84%E7%89%88%E6%9C%AC/","excerpt":"在迁移django项目过程中遇到不明问题，定睛一瞧竟是sqlite不到3.8","text":"在迁移django项目过程中遇到不明问题，定睛一瞧竟是sqlite不到3.8 辣鸡yum安装就说最新是3.7 不大行 先看看现在的版本sqlite3 --version 打开sqlite官网下载页面https://www.sqlite.org/download.html 选择这个，复制他的链接 编译安装12345wget 他的链接tar -zxvf 那个文件.tar.gzcd 那个文件./configure --prefix=/usr/local/sqlitemake &amp;&amp; make install 更改旧的sqlite31mv /usr/bin/sqlite3 /usr/bin/sqlite3_old 设置新的sqlite3123mv /usr/local/sqlite/bin/sqlite3 /usr/bin/sqlite3#也许可能只要这样ldconfig 最后再看看版本sqlite3 --version","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"linux","slug":"计算机/linux","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://zhongkangjk.github.io/tags/linux/"}]},{"title":"天下圣贤豪杰","slug":"天下圣贤豪杰","date":"2022-04-26T16:37:17.000Z","updated":"2022-04-26T16:37:47.765Z","comments":true,"path":"2022/04/27/天下圣贤豪杰/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/%E5%A4%A9%E4%B8%8B%E5%9C%A3%E8%B4%A4%E8%B1%AA%E6%9D%B0/","excerpt":"天下圣贤豪杰","text":"天下圣贤豪杰 陆芝默不作声，思绪飘远，回到了家乡，想起了很多旧人旧事。 一座酒铺的墙壁上，曾经悬着一块不曾署名的无事牌，写了那么句：陆芝其实不好看，但是腿长，中意很多年了，怎么也看不够。 虽然无事牌没有署名，但是字迹明显，大概那位剑修，其实也没想着刻意隐瞒身份。 有些远远的喜欢，总是忍不住要让人知道，才能甘心。 只是不等陆芝与那老sè胚计较什么，那位每次喝酒都喜欢端碗蹲在路边的剑修，就在城外战死了。 除了那块无事牌，剑修其实一辈子也没跟陆芝说过几句话。所以世上再没谁知道，是太喜欢她，还是没那么喜欢。 剑气长城的最后几年，人人脚步匆匆，说走就走了。 曾经有个年轻掌柜，蹭着酒，偶尔喝多了酒，反而眼神愈发明亮，眉眼飞扬，说以后等他回了家乡，还要开一家酒铺，卖酒，卖阳春面，也卖火锅和臭豆腐，咱们剑气长城的人去那边，可以破例，可以打折，可以赊账。 有人问，赊账没啥意思，可不可以不还钱。年轻人笑着说，等你们去喝酒了再说。 有人再问，沽酒小娘，能不能多雇几个，水灵得能掐出水来。年轻二掌柜笑骂道，天底下没有这样的酒铺，还得掌柜豁了性命不要，才能挣那么点辛苦钱。 哄然大笑。 在那尚未成为家乡的异乡，飞升城的那座酒铺还在，只是年轻掌柜不在了，曾经的剑修们也大多不在了。","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"宁姚来见陈平安","slug":"宁姚来见陈平安","date":"2022-04-26T16:35:53.000Z","updated":"2022-04-26T16:36:41.294Z","comments":true,"path":"2022/04/27/宁姚来见陈平安/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/%E5%AE%81%E5%A7%9A%E6%9D%A5%E8%A7%81%E9%99%88%E5%B9%B3%E5%AE%89/","excerpt":"宁姚来见陈平安","text":"宁姚来见陈平安 在陈平安翻出屋子后，小米粒赶紧跳下凳子，跑到窗口那边，好像是发现自己个子太矮，只好又折返回桌子，搬了条凳子过去，站在凳子上，伸长脖子，使劲望去。 裴钱走到窗口，小米粒轻声问道：“是山主夫人来了吗？” 裴钱趴在窗台上，笑着点头，“肯定是师娘来了。” 小米粒在裴钱耳边轻声问道：“那等会儿见着了山主夫人夫人，我要磕几个头才合适啊？一百个够不够？！” 因为在裴钱第一次游历剑气长城又回家后，那会儿的裴钱个儿还不太高，跟暖树姐姐差不多，每次跟周米粒说起剑气长城那边的事情，裴钱都贼开心，说了好些稀奇古怪的见闻，还有裴钱在那边闯荡江湖的丰功伟绩，还说有个叫郭竹酒的小丫头片子，黝黑黝黑的，比黑炭黑黑炭，而且个子比小米粒还矮一大截，却是个功力极其深厚的马屁精，见着了师娘次次都会磕头。不过那个绰号绿端的小丫头片子，傻是傻了点，说话比陈灵均还不着调，不过其实人还不错，勉强能算是师父的弟子吧……一来二去，小米粒就记住了那个按照辈分算是裴钱师妹的矮子小姑娘，以及那个小姑娘的最喜欢磕头。 裴钱被小米粒这么一问，就立即知道不妙，若是给师父知道了自己小时候，回到家里是怎么在背后埋汰的郭竹酒，估计要惨兮兮。 师父的那些小账本，可从来不落笔，只在师父心里，谁都翻不着瞧不见的。 所以裴钱先告诉小米粒不用磕头，到时候见着了师娘，记得扯开嗓子，多喊几声山主夫人就好，再提醒小米粒，不认得什么郭竹酒。 小米粒挠挠脸，说道：“我卯足劲喊话，嗓门可大，一不小心就跟打雷似的，吓着了山主夫人咋办？” 裴钱笑着揉了揉小米粒的脑袋，“师娘很厉害的，不会被你吓到。” 小米粒想了想，“怎么个厉害啊？” 裴钱沉默片刻，望向窗外的暮色，给出一个好像答非所问的答案：“没有师娘的话，我就遇不到师父了。” 小米粒突然伸出手，轻轻拍了拍裴钱的胳膊。 因为不知道为什么，黑衣小姑娘觉得裴钱这会儿好像有些伤感，不大不小的，就是有那么一丢丢。 长大以后的裴钱，经常会这样，在落魄山陪着自己和暖树姐姐，不管是在竹楼二楼，在崖畔石桌，还是在山巅栏杆，坐着坐着，聊着聊着，裴钱就会突然不说话了，想着事情，抿起嘴唇，而且会腰杆挺直，好像在看很远很远的地方。 那些年在山上，偶尔裴钱会高高抬起头，望向很高很高的地方，但是她的心情，好像又在很低很低的地方，小米粒就算想要帮忙，也捡不起搬不动。 裴钱再也不会卷起袖子，先沿着地上那些青砖，一步一步倒退而走，再往崖外纵身一跃了。也不会再与自己一起大摇大摆走路巡山了。裴钱也不会在树下一个蹦跳，双手抓住树枝上，再让自己抓住她的脚丫一起荡秋千了。很多裴钱以前需要跳起才能抓住的树枝，如今裴钱踮个脚尖，就抓住了。棋墩山上的那个马蜂窝，她们已经很多年没去斗智斗勇满山跑了。 很多裴钱个儿矮矮时候的有趣事情，就像兜里的瓜子，一磕就没了。 手臂被小米粒轻轻一拍，裴钱转过头，再微微低下头，笑问道：“咋了？” 小米粒好像从裴钱袖子上双指捻住了一粒瓜子，往自己嘴里一丢，“小小忧愁，一吃就没。” 裴钱笑了起来，小米粒也跟着笑起来，起先还有些含蓄，等到见到裴钱开心，小米粒就一下子笑得合不拢嘴。 裴钱一拍脑袋，快步走向桌子，收起那幅贴有彩笺便签的卷轴，小米粒跳下凳子，趴在桌上，哈哈笑道：“我晓得的，没见过它，么得这回事嘛！” 裴钱嗑起了瓜子，小米粒趴在桌上，犹豫了很久，突然小声说道：“裴钱，你能不能修行啊？” 裴钱疑惑道：“问这个做啥锤子？” 小米粒咧嘴一笑，圆乎乎的下巴搁在手背上，“随便问问。” 其实她是怕下一次出远门，隔了好些年才回家，害怕裴钱个儿没有长高，却有白头发了。 裴钱笑道：“我一直有练剑啊，好像……不是特别难。” 裴钱赶紧补了一句，“这种话，你千万不能跟我师父说，晓不得？” 小米粒一下子兴高采烈，“知不道！”","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"傻狍子","slug":"傻狍子","date":"2022-04-26T16:33:50.000Z","updated":"2022-04-26T16:34:26.842Z","comments":true,"path":"2022/04/27/傻狍子/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/%E5%82%BB%E7%8B%8D%E5%AD%90/","excerpt":"《读者》 2020年9期","text":"《读者》 2020年9期 “你……狍子是善良的动物。要是人们在野外冻麻了身子，遇上狍子，它会舔醒你，还把皮毛贴在你身上…… 爷爷讲的。” 祥讲了他爷爷1932年的经历。 祥的爷爷穿过大旷野，到镇上跑买卖，途中遇见了土匪。 “胡子搜去了爷爷身上的大洋，还扒走了爷爷身上的羊皮袄，然后把爷爷扔在狂野中，打马而去。 那是冬天的早晨，爷爷的腿受了枪伤，倒在雪地上渐渐失去了知觉， 嗒嗒声从狂野深处传来，不久一股暖流荡遍了爷爷的全身。 一群觅食的狍子救了爷爷……” 不知不觉中，我把冰车掀落在雪地上，扑嗒声在狂野上回荡。 “那，咱们应该帮帮那狍子……”","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"完美的预设","slug":"完美的预设","date":"2022-04-26T16:32:35.000Z","updated":"2022-04-26T16:33:14.433Z","comments":true,"path":"2022/04/27/完美的预设/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/%E5%AE%8C%E7%BE%8E%E7%9A%84%E9%A2%84%E8%AE%BE/","excerpt":"《读者》 2020年9期","text":"《读者》 2020年9期 假如你正乘坐航班从法兰克福飞往纽约，那你觉得这班飞机有多长时间是行驶在航线上的呢？正确答案是：从来没有。如果你坐在靠窗的位置，只要扫视一下机翼边缘，便能观察到副翼的躁动——副翼就是用来不断修正航线的。自动驾驶系统每秒钟都会数千次计算飞机实际航线和预设航线间的偏差，然后将校正的指令传导到副翼。 我常常驾驶一架无自动飞行系统的小飞机消遣时光，此时，进行微小修正任务的便是我的双手。只要我放开操纵杆一秒钟，飞机便会偏移航线。你在开车的时候也会有这样的经验：即便在笔直的高速公路上，双手也不能离开方向盘，否则你将会偏离行驶路线并面临出事的危险。 生活的运转方式同飞机和汽车的一样，尽管我们更希望让它变成另一种样子：可规划、可预见、无干扰。如果真能如此，那我们只需要专注于预设，专注于理想的起始状态就好。教育、事业、爱情，如果一开始就能做出完美的规划，之后再如预期般完成目标，那该多好。然而正如你所知，生活并非如此。生活这架航班总要不断地经历气流，我们要同所有可能出现的侧风和恶劣天气做斗争。尽管如此，我们表现得却如同一个天真的、期待好天气的飞行员一般。我们高估了预设的作用，低估了修正的作用。 作为一名业余飞行员，我明白了一点：起飞的状态并不是那么重要，关键是起飞之后的调整。 美好的生活是一種持续稳定的状态——这是一种常见的认识误区。只有通过后期不断地调整，我们才能让生活变得美好。","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"django搜索两个模型放在一个分页的函数","slug":"django搜索两个模型放在一个分页的函数","date":"2022-04-26T16:30:30.000Z","updated":"2022-04-26T16:32:09.404Z","comments":true,"path":"2022/04/27/django搜索两个模型放在一个分页的函数/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/django%E6%90%9C%E7%B4%A2%E4%B8%A4%E4%B8%AA%E6%A8%A1%E5%9E%8B%E6%94%BE%E5%9C%A8%E4%B8%80%E4%B8%AA%E5%88%86%E9%A1%B5%E7%9A%84%E5%87%BD%E6%95%B0/","excerpt":"久远~","text":"久远~ 123456789101112131415161718192021222324252627282930313233343536373839def company_list(request): search = request.GET.get(&#x27;search&#x27;) # 用户搜索逻辑 if search: 公司列表2019 = 公司表2019.objects.filter( Q(名称__icontains=search.strip()) # | #Q(note__icontains=search.strip()) ) 公司列表2020 = 公司表2020.objects.filter( Q(名称__icontains=search.strip()) # | #Q(note__icontains=search.strip()) ) company_list = itertools.chain(公司列表2019,公司列表2020) company_list = [i for i in company_list] # querysets = itertools.chain(one_queryset,two_queryset) else: # 将 search 参数重置为空 search = &#x27;&#x27; company_list = [] # 每页显示 篇文章 paginator = Paginator(company_list, 9) page = request.GET.get(&#x27;page&#x27;) # 将导航对象相应的页码内容返回给 articles companies = paginator.get_page(page) context = &#123; &#x27;companies&#x27;:companies,&#x27;search&#x27;: search&#125; return render(request, &#x27;search/list.html&#x27;,context)","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"}]},{"title":"zip打包解压命令","slug":"zip打包解压命令","date":"2022-04-26T16:21:09.000Z","updated":"2022-04-26T16:22:39.453Z","comments":true,"path":"2022/04/27/zip打包解压命令/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/zip%E6%89%93%E5%8C%85%E8%A7%A3%E5%8E%8B%E5%91%BD%E4%BB%A4/","excerpt":"zip命令","text":"zip命令 zip 命令为打包压缩命令，一般为了跟 windows 交互才会用的，不涉及 windows 推荐使用tar配合 gzip,bzip2,xz 123456789101112131415161718192021222324#常用命令选项-d 从压缩文件内删除指定的文件。-m 把文件移到压缩文件中。-0-9 压缩比-r 递归处理，所有文件和子目录一并处理。-x&lt;范本样式&gt; 压缩时排除符合条件的文件。-c 交互为每一个文件设置注释-z 交互多行注释,英文句话.来表示结束-e 交互设置密码-P 直接设置密码zip test.zip test.txt #添加压缩文件zip test.zip test1.txt #移动文件到压缩包zip -d test.zip test.txt #删除test.txtzip -r test.zip ./* #压缩当前全部文件到test.zipzip test2.zip test2/* #打包目录zip test3.zip tests/* -x tests/ln.log #压缩目录,除了tests/ln.logzip -r test.zip ./* -P 123 #设置密码(明文设置密码不太安全)zip -r test.zip ./* -e #交互设置密码(安全)#设置压缩比#-0不压缩，-9最高压缩，默认为-6zip test.zip test.txt -6 unzip 12345678910111213141516171819202122-d 指定目录-n 解压时不覆盖-o 不询问直接覆盖-l 显示压缩文件内所包含的文件。-v 显示压缩文件内所包含的文件。-x 指定不要处理哪些文件。-P 解压缩密码#解压到当前目录并直接覆盖unzip -o test1.zip#指定解压目录unzip test1.zip -d /tmp/#解压特定文件unzip test1.zip inc abc#查看zip包里所有文件unzip -l test.zip#只查看zip包里第1级文件或目录unzip -l test.zip -x &#x27;*/*/*&#x27;","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"linux","slug":"计算机/linux","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://zhongkangjk.github.io/tags/linux/"}]},{"title":"出两剑","slug":"出两剑","date":"2022-04-26T16:17:22.000Z","updated":"2022-04-26T16:18:26.991Z","comments":true,"path":"2022/04/27/出两剑/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/%E5%87%BA%E4%B8%A4%E5%89%91/","excerpt":"出两剑","text":"出两剑 陈平安看了眼袖珍明月，笑了笑，收入袖中。 以后送给自己的开山大弟子，就当是作为五境破六境的礼物好了。 如果已经跻身六境又破七境，那么弟子可就有点为难师父了啊。 那把曹子匕首在陈平安指尖、手背翻转如飞。 陈平安突然一个急停，收起短刀，双手撑在城头上，仰头喃喃自语。 所幸平安，复见天曰，其余何辜，独先朝露。 阿良昔年从青冥天下重返剑气长城的那次重逢于异乡。 两人一起饮酒，阿良曾经说，陈平安，其实真的可惜。 你没有见过三教论辩，尚未开口说话就好像已经赢了的老秀才，没有亲眼见到那个意气风发，神采飞扬的文圣。 你没有见过那个只是双鬓微微霜白、容貌还不算太苍老的先生。 你没有见过彩云之上，白衣胜雪拈黑子的年轻崔瀺。 你没有见过犯错之后，永远高高扬起头的少年左右。 你没有见过读书之时，喜欢微微皱眉头的年少小齐。 你没有见过伸出双手，按住两颗脑袋不让两个师兄弟气呼呼打架的刘十六，咧嘴憨笑，然后在先生的眼神示意下，稍微松开一颗脑袋的大手，让年纪更小的师弟小齐，能够轻轻踹上不讲道理的左师兄一脚。最后先生就当起了捣浆糊的和事佬，说可以了可以了。小齐双臂环胸，眉眼飞扬，与传道授业时的先生有很多神似，身材修长的大师兄崔瀺，会双手搭住师弟左右的肩头，下巴轻轻搁在恼火少年的脑袋上，说算啦算啦，你是师兄，让着点小师弟。小齐就会得了便宜还卖乖，笑着朝那左师兄摇头晃脑，说我需要他让？！当左右狠狠瞪眼，小师弟就立即跑到大个子师兄身后，可当大师兄一放开左师兄的肩膀，小齐觉得不妙，就立即躲去先生身后，先生便张开双手，护着那个小弟子在身后，左一步，右一脚，拦着身前那个依依不饶的的二弟子，那个名为左右的少年郎。 对啊。 陈平安都未见过。 当时陈平安笑着喝酒，痛饮一碗酒水，说我只是听你说过，听说了也只能想象，可只是听说只是想象，我就很高兴。 阿良见着那些好像从一个年轻人笑容中、一只空白酒碗里跑出来的伤感。 伤感总是这么顽劣，眼睛都藏不好，酒水也留不住。 于是最后阿良跟着喝完最后一碗酒，既是感慨又是安慰，说那次离开剑气长城，我好像就已经老了，然后有天，一个黝黑消瘦的草鞋少年，身边带着个红棉袄小姑娘，一起向我走来。 此时此刻的城头上，陈平安也想要往家乡走去，与很多人走去，归乡路远，一路上哪怕见到了再多的陌生人，也要认真看遍啊。 陈平安双手抱着后脑勺，挺直腰杆，一直望向远方。","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"谜语","slug":"谜语","date":"2022-04-26T16:12:05.000Z","updated":"2022-04-26T16:16:08.300Z","comments":true,"path":"2022/04/27/谜语/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/%E8%B0%9C%E8%AF%AD/","excerpt":"谜语","text":"谜语 老秀才说道：皇帝爱长子，百姓爱幺儿，我当先生的，难免会偏心关门弟子些，君倩你莫要多想，毕竟陈平安与你们几个不一样，他在先生身边时日最少，靠自己最多，又年纪最小，还太年轻…… 说到这里。 老秀才止住话头，因为老人突然发现哪怕是自己的关门弟子，原来，原来竟然也不年轻了。 昔年那个眼神澄澈、都还不会喝酒、穿着草鞋走过千山万水的少年郎，竟然都过了而立十年，开始往不惑之年而去了。 老秀才叹息一声，一跺脚，身形消散。 刘羡阳便递出一捧瓜子，刘十六坐回台阶，摇摇头。 刘羡阳主动说了些话，刘十六要么点头，要么言简意赅几个字，最后两个初次相逢的“本家”，就开始沉默，各自想着心事，只是都不觉如此便尴尬。 最后刘十六问道：“先前你打盹，看你剑意迹象，流转形骸，是在梦中练剑？” 刘羡阳点点头，随口道：“有部祖传剑经，练剑的法子比较古怪，只可惜不适合陈平安。” 刘十六说道：“我与白也是朋友，他剑术不错，以后你要是在修行路上，遇到了比较大的剑道 瓶颈，可以去找他切磋，白也虽然性子冷清，其实是热心肠，遇见你这样的晚辈，定会刮目相看。” 刘羡阳转过头，笑嘻嘻抱拳道：“好嘞，哪怕修行瓶颈不是那么大，只要白先生愿意教，晚辈便愿意学！” 刘十六点点头，年轻人不是个心眼小的，心大。半点不会觉得自己是在居高临下的施舍，这就很好。 难怪能与小师弟是朋友。 就像自己与白也？ 刘十六站起身，与刘羡阳告辞，他本就是个不喜欢说话的，尤其是客气话。 刘十六请那魏山君帮着隐匿行踪，重返落魄山。 打算在这儿多留些时日，等那天幕再度开门，他好待客。 在落魄山上待久了，与魏檗，还有那来自剑气长城的米裕关系也就熟了。 刘十六与米剑仙打听了些小师弟的隐官事迹。 大为欣慰。 刘十六如今对落魄山，已经比较知根知底。 虽然小师弟经常远游，在家乡不多，在异乡更久。 但是依旧攒下了一份偌大家底，确实不易。 如今落魄山的家底，除了与披云山魏山君的香火情，光是靠着牛角山渡口的生意抽成，就进账不小。 可惜刘十六没能见着那个绰号老厨子的朱敛。 而且先生说小师弟的开山大弟子，那个裴钱，迟早会让整座天下大吃一惊，故而刘十六颇为好奇。 化名余米的剑仙米裕，尚未在霁sè峰祖师堂敬香，但是在宝瓶洲，一位来自剑气长城的玉璞境剑修，其实分量半点不轻。 只不过这位剑修，也确实太惫懒了些。 据说通过那条自家的翻墨渡船，让人购买了许多用来观看镜花水月的山上器物，白碗，画卷，砚台，尺牍字帖等等，给米裕搜罗了二十多件，花钱如流水，周米粒跟刘十六说起这一茬的时候，小姑娘都要替余米心疼不已，说这架势，不是摆明了奔着打光棍去的吗？ 看守大门的郑大风，纯粹武夫出身，去了第五座天下。 岑鸳机，是落魄山的祖师堂谱牒出身，同时又是那朱敛的不记名弟子，小姑娘练拳挺心诚，每天都在那条山顶山脚路上，来回走桩。 刘十六看在眼里，打算找个机会，合乎山上规矩地指点她几句拳法拳理。 元宝元来，姐弟二人，是那卢白象的嫡传弟子，听说刚刚离开落魄山没多久。所以如今的落魄山上，就更加冷清了。 拜剑台，金丹境瓶颈崔嵬，蒋去成了练气士，而且走得符箓一道。 云游至此的北俱芦洲老真人桓云，专门为了蒋去，曾在落魄山逗留一年之久，为蒋去传授符箓术。 因为蒋去暂时并非落魄山祖师堂嫡传，传道一事，忌讳不多，双方没有师徒之名，却有师徒之实。 另外那个同龄人张嘉贞，由于没有修行资质，并未灰心丧气，而是选择跟随那位从不抛头露面的大账房先生，来自倒悬山春幡斋的韦文龙，学习钱财精算之术。 骑龙巷压岁铺子，女鬼石柔，却身披一位飞升境大修士的遗蜕。 至于那位长命道友，更是。 草头铺子，目盲道人贾晟，赵登高，田酒儿，师徒三人，那个酒儿小姑娘，鲜血是天生的“符泉”。亏得是入了落魄山，不然下场不会太好，很容易成为仙家山头的一棵摇钱树。 从落魄山迁徙去往灰蒙山修行的一条黑蛇，棋墩山出身，如今是龙门境。幻化人形之后是那黑衣青年，脸sè惨白，身披法袍“鸦青”，是一件蛇蜕炼化而成。化名云子，真名“德章”。 关于相当于半条命的“真名”一事，听小米粒说，是那只大白鹅的“旨意”，云子不敢不从。 好在赐名之外，那个崔东山还赐下一件适宜蛟龙之属修炼的仙家重宝。 作为修行不易的山精-水怪之属，云子之所以破境如此之快，与本身资质有关系，却不大，还是得归功于陈灵均赠送的蛇胆石。 至于黄湖山那条深藏不露的大蟒，早已是金丹境瓶颈，只是大蟒自己始终不愿走江。 大山君魏檗为刘十六泄露过天机，它原本有望与某条“小泥鳅”，争一争五行之水的大道机缘，遗憾落败，最终未能离开骊珠洞天。 那大蟒的修行资质自然不差。早已经能够幻化人形。但是极少露面，偶尔现世，都以真身露面，喜好蛰伏在大湖水底，默默开辟一座水族洞府。 曾经用金精铜钱买下山头的黄湖山旧主，因为大蟒从未以人身上岸，所以只知道自家湖底盘踞着一条湖泽水怪，但是既不清楚它的境界高低，更不清楚这么一桩涉及骊珠洞天气运流转的天大道缘，不然绝不会将黄湖山半卖半送给落魄山。 大蟒如今化名黄衫女，本命真名，一样是崔东山赠予，在谱牒上为“佛松”。她只会偶然离水上岸，现身见一见那个周米粒。 周米粒还是不敢独自下山，就靠着一袋袋瓜子与魏山君做买卖，每隔一月就把她丢到黄湖山水边。 黄衫女，有那碧瞳如水涵清秋，她上岸后，浑身上下，弥漫着一股若隐若现的天然苍茫水云气。 湖水之畔有一老松，亦是暗藏玄奇，气象内敛，暂未引发山水异动。 好一个伏蟒千年无动意，老松何日不参禅。 与天生气势凌人的云子，截然不同，真身为蟒的黄衫女却喜静不喜动。后者巢穴地界名为青泥坡，位于灰蒙山，大有“雾毒飞鸢堕，风腥巨蟒过”的意思。 白衣少年曾经带着那条骑龙巷左护法，一起游历黄湖山，临水之时，笑着说文豪曾有诗篇《说剑》，“留斩泓下蛟，莫试街中狗”。 听得湖底大蟒潜藏水底，真身头颅低垂贴泥，至于白衣少年身后的那条土狗，更是瑟瑟发抖，趴地不起。 藩属黄庭国在内，以及红烛镇、棋墩山在内的旧神水国，历史上都曾是古蜀地界，相传蛟鼍窟连绵不绝，惹来剑仙出没云水间，剑光直下，斩杀蛟龙。 只不过刘十六没打算去见那云子和黄衫女，不打搅他们的修行，准确说来是不扰乱他们的道心。 毕竟天下水裔，见着了他刘十六，其实都不是什么好事。 唯独那个每天扛着金扁担和绿竹杖、早晚巡山不嫌累的小米粒，哪怕每天与刘十六相处，竟是半点事儿都没有的。 一来是这“哑巴湖大水怪”境界太低，再者周米粒道心清浅澄澈，反而无事。 此外还有些落魄山祖师堂人物，也都不在山上。 刘十六熟悉了落魄山之后，才发现好像从年轻山主到学生弟子，再到祖师堂嫡传，以及供奉， 好像多在远游。 风气很怪。 寻常山头，不会如此。 武夫，剑修，儒生，道门练气士，各sè山泽精怪，女鬼。 还要加上那位根脚特殊的长命道友。 却相处融洽。 也怪。 今天周米粒拉着大个子坐在山巅，陪她一起看那憨憨的岑姐姐练拳下山，身形越来越米粒小，让小米粒高兴得双手挡在嘴边，笑哈哈。 周米粒笑过之后，都没裴钱提醒她要淑女些，就有些伤心，于是打算说些开心的话语，转过头，与刘十六轻声问道：“半个山主师兄，咱们来猜谜语吧？我可是知道好大一箩筐的谜语，莫说是暖树姐姐，就连裴钱都比不过我，她次次想不出答案，就只能着急得原地团团转嘞。” 刘十六笑道：“你问。” 周米粒咳嗽一声，“天上有面鼓，藏在云深处。一敲轰隆隆，再敲轰轰隆。是啥个事情，知不道？” 刘十六说道：“打雷。” 刘十六瞥了眼天幕，先前被他打落金身的远古神灵，并非出身雷部，不过说不定下一位，就是了。 周米粒竖起大拇指，然后小姑娘开始沉思。 哦豁，遇到高手了。 原本还打算提醒大个子一句的小米粒，又问道：“山上有株草，珍珠可不少。我去没拿来，你去也白跑……” 刘十六笑道：“是露珠吧。” 书上有那譬如朝露，去日苦多。 犹有那所幸平安，复见天日，其余何辜，独先朝露。 周米粒双手环胸，皱起眉头，想了个比较有难度的谜语，“棋子多又多，棋盘大又大。咱们只能看，偏偏不能下。我问你，那么棋子是个啥？” 刘十六笑着摇头。 他曾独自远游天外，亲眼所见礼圣法相，捻起那些“棋子”，拦阻那些远古存在。 周米粒晃着脑袋，笑眯眯道：“可难可难吧，不知道没关系，只要到晚上一抬头，你就知道答案哩。” 然后小姑娘看那大个子，似乎有些神色落寞，她便说了句小石碑，一块块块，竖在门口分两排。她微微张开嘴，嘿嘿笑着。 刘十六笑着揉了揉小姑娘的脑袋：“知道了。” “个儿高，离天近，真羡慕。” 小米粒托着腮帮，眺望远方，忧伤小小的，却是真忧愁，“半个山主师兄，我跟你说个秘密啊，我其实也不是那么喜欢巡山，可是我每天在山上，光嗑瓜子没事做，帮不上啥忙。你说愁不愁人？所以每次巡山我都跑得飞快飞快，是我在偷偷的偷懒哩。” 刘十六点点头，“我会帮你保密的。” 周米粒凑近些，小声说道：“那我跟你说个天大的秘密，我跟好人山主，当年在北俱芦洲那儿一起走江湖的时候……” 小姑娘将绿竹杖和金扁担都先放在脚边，然后站起身，这才说道：“我就站在一个大背篓里边，可劲儿敲裴钱师父的脑袋。陈好人说一颗雪花钱一颗板栗，我眼睛都没眨一下。” 刘十六笑道：“那你真是很厉害了。” 原本神采飞扬的周米粒，一下子神色黯然，“那些谜语，都是他教我的。他再不回家，我都要忘记了。","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"消逝的Timeline","slug":"消逝的Timeline","date":"2022-04-26T16:05:19.000Z","updated":"2022-04-26T16:11:40.719Z","comments":true,"path":"2022/04/27/消逝的Timeline/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/%E6%B6%88%E9%80%9D%E7%9A%84Timeline/","excerpt":"之前博客的Timeline","text":"之前博客的Timeline 2021-01-28 @Master易 周中坐班 易疲敝 ，咕子老公如是说，账记+1 2021-01-17 @Master易 抱残守缺，故步自封 2021-01-13 @Master易 今日比达尔已清账 2021-01-12 @无名之辈 明日要恰饭了，老公记账+2，明日付款后销账 2021-01-01 @无名之辈 晚上还没有明日安排，臀k记账+2 2020-12-24 @Master易 老公开始安排首胜，于是自己不出现，于是记账+1！ 2020-12-20 @Master易 盛世长安花 2020-12-08 @Master易 今天老公居然声称眼累，又是咕咕，记账+1 2020-12-07 @Master易 宽敞，放个屁都不用开窗通风 2020-12-07 @Master易 老公刚开始上班就遇上年终奖，必须记账+1 2020-12-07 @Master易 打不过就跑，谁追他，谁吃屁 2020-12-06 @Master易 今日の首胜仍旧是失去了老公の声音，账上+1 2020-12-05 @Master易 今日试图首胜，而老公发出咕咕咕咕の声音，可记+1 2020-12-03 @无名之辈 bbk上班繁忙，无时间被请饭，自愿提出反向记账，遂给bbk记账+1 2020-12-03 @Master易 今天太阳的对面是月亮，一起出来了 2020-11-28 @Master易 老公说那个什么套路千层面特别好吃，要请我和比达尔吃，先记账+1 2020-11-27 @Master易 老公悄悄开局，竟已首胜，岂不记哉？+1也 2020-11-26 @Master易 老公说好已经就位，结果邀请无应，定然是咕咕！记账+1 2020-11-26 @Master易 老公说:一日当三请吾友，于是记账+3 2020-11-20 @Master易 老公今日拍了某街景，想请我吃红柳烤羊肉，先记下+1 2020-11-18 @Master易 今天获得了一个大奖励箱子，为了庆祝，给老公记账+1 2020-11-17 @Master易 来路作归途 2020-11-14 @Master易 今日老公强势带飞，觉得应当庆祝下，记账+1 2020-11-12 @无名之辈 老公为了给比达尔庆祝生日，主动要求记账+1 2020-11-11 @Master易 今日老公说了句什么仨凝光了，比达尔说是好事，那果断需要庆祝一波，记账+1 2020-11-11 @Master易 试记账+1 2020-11-08 @Master易 真正的体贴是让人察觉不到的 2020-11-07 @Master易 今日首胜，比达尔偷偷去拿了，但老公并没出现，于是得记账啊+1 2020-11-06 @Master易 也不是什么捞博客 2020-10-29 @Master易 老公声称要一起首胜，结果上号发现并没有人，果断记账+1 2020-10-28 @无名之辈 我的鼠标对准了他，他就算死了。 ——TX 2020-10-19 @Master易 一颗龙心向日月，去留肝胆两昆仑 2020-10-18 @Master易 罢了，最好还是无事发生 2020-10-09 @Master易 老公被放出来过于开心，想请饭，+1 2020-10-04 @Master易 各有渡口，各有归舟。 2020-09-27 @Master易 为了我的旅行 2020-09-26 @Master易 人在2岁左右的时候会无意间说出前世记忆，濒死体验为主，到7岁左右完全忘记 2020-09-24 @Master易 有个老公他虽然不是故意的，但是他当了一回内鬼，里应外合，背刺了善良淳朴的我，记账+1 2020-09-20 @无名之辈 无法嗨起来，略有些低沉 2020-09-14 @Master易 今天的云是这样 2020-09-12 @无名之辈 秋名山上行人稀，常有车手较高低，如今车道依然在，不见当年老司机 2020-09-09 @Master易 莫问归期 2020-09-06 @Master易 那些荒唐传闻化名称为青春 2020-09-05 @无名之辈 恰恰是竭尽全力，依旧未能得偿所愿，可世道大方向，终究是被逐渐扭转，所以反而更加能够让旁观者动容。 2020-09-05 @无名之辈 黄花黄，白云白，青山青，少年年少。 2020-08-21 @Master易 夏天好像走了 2020-08-06 @Master易 老公突然一声：“万物皆可记账！” 一拍锅叫我记账，那我必遂他意，老公记账+1！ 2020-08-05 @Master易 准备周末安排3人份烤肉，估计老公会咕咕，预记账+1 2020-08-03 @Master易 我们落魄山，行走江湖，门风很正，诚字当头！ 2020-08-03 @Master易 极速车王 2020-07-31 @Master易 喜欢惬意的躺在地上的狗 2020-07-28 @Master易 身为野老，路见游民 2020-07-26 @Master易 那都是很好很好的，可是我偏不喜欢 2020-07-24 @Master易 预计安排一波烤肉，没想到比达尔和老公居然双双咕咕，直接老公记账+2！！ 2020-07-23 @Master易 世界上最廉价的东西是什么，大概就是付出吧，一贫如洗的真心，一事无成的温柔 2020-07-21 @Master易 壁立千仞,无欲则刚，而我Master易，刚 2020-07-18 @Master易 今天本来要烤肉安排，结果老公唤来狂风骤雨试图阻止记账，必对其记账+1！以示惩戒 2020-07-17 @无名之辈 走了 2020-07-17 @无名之辈 以后，这里只会有易一个人 2020-07-16 @Master易 万人丛中一握手，使我衣袖三年香 2020-07-16 @Master易 穿心回首泪千行 2020-07-16 @Master易 遇事不决，可问春风 2020-07-12 @Master易 谁能讲个故事哄易大师睡觉呢 2020-07-10 @Master易 今天老公带来了安排上回家の票の胜利消息，必须庆祝！记账+1！ 2020-07-10 @Master易 能吃能喝能睡，这就是幸福的一天 2020-07-09 @Master易 学其上，仅得其中 2020-07-07 @Master易 优雅是简约之父 2020-07-06 @无名之辈 看来是好了，把三天的逻辑统一了 2020-07-05 @Master易 可是这个模块我只想记录短文字 2020-07-05 @jackyfzh 感觉易大师还可以加一个回复功能（就变成正真的动态了） 2020-07-05 @Master易 改了下视图，希望明天能好 2020-07-05 @Master易 没修好 2020-07-04 @jackyfzh 易大师bug修好了吗？ 2020-07-04 @Master易 比达尔请客吃饭，老公居然爽约，无奈记账一笔+1 2020-07-04 @Master易 你说这不是巧了吗 2020-07-03 @jackyfzh 易大师的首页又修好啦！ 2020-07-03 @jackyfzh 易大师的时间线也是蛮漂亮的嘛 2020-07-01 @Master易 完结是因为开始过，失败是因为战斗过，分手是因为相遇过，死去是因为你真的活过 2020-07-01 @Master易 谁家少年不风流谁人长情常如酒，谁无个见字如面斗转二十秋 2020-06-30 @datatest.org 路过支持！！ 2020-06-30 @jackyfzh 愿易大师的网站越做越牛 2020-06-30 @Master易 墨舞雪飞生妙笔，落剑流水花无情 2020-06-24 @Master易 德国肉厂疫情大爆发！老公幸免于难！喜大普奔，必须记账+1！然不知为何被加倍，又+1！ 2020-06-23 @Master易 为纪念差点就为了给比达尔庆祝通关给老公记上账这件事，给老公记账+1 2020-06-20 @Master易 被正宗东北特色小吃所吸引，给老公记账一顿烤冷面+1，（小龙虾大闸蟹至尊烤冷面2份）老公主动要求再加两份泡面！ 2020-06-15 @Master易 比达尔实在是在弱鸡了，居然连百度都不会用，于是给老公记账+1 2020-01-18 @Master易 准备在过年之前给老公记一次帐，虽觉不忍，但高票通过，无法回避，于是给老公记账+1 2020-01-01 @Master易 相约懒婆娘火锅，老公未至，请饭+1，事后装死，罪加一等又+1，晚饭未安排再+1 2019-12-28 @Master易 相约比达尔家看比达尔洗衣服，吃串，玩游戏，而老公爽约，遂请饭+1 2019-12-25 @Master易 老公の庆余年、小丑、巫师三连击试图让我没有学习时间，但我怎会上当，反手就来个记账+1 2019-12-23 @Master易 易大师和比达尔的部落战平了，被人打了个三星，要是老公在，这结局定然不会如此悲凉，遂老公请饭记账本+1","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"江北诗仙与书中有酒","slug":"江北诗仙与书中有酒","date":"2022-04-26T16:00:15.000Z","updated":"2022-04-26T16:01:56.105Z","comments":true,"path":"2022/04/27/江北诗仙与书中有酒/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/27/%E6%B1%9F%E5%8C%97%E8%AF%97%E4%BB%99%E4%B8%8E%E4%B9%A6%E4%B8%AD%E6%9C%89%E9%85%92/","excerpt":"迁移","text":"迁移 江北诗仙路上行人雨纷纷，没带伞的欲断魂 年年难过年年过，夜夜梦回夜不回 殷勤昨夜三更，又得浮生一日 杨柳依依不知门，无处寻那不归人 书中有酒陈平安忍住笑意，背后剑仙已经自行出鞘，悬停在他身前。陈平安一步越上剑仙，御剑远去，气势如虹，剑气冲天，远游天地间。 我跟你说啊，我其实真是流落民间的公主殿下，小时候我在家里都用金扁担的，馒头儿，吃一个丢一个。 杏花巷，一个孩子又蹲在糖葫芦摊子不远处，每次都蹲一会儿，时间不久，但让摊子主人记得了那张黝黑小脸庞。终于有一次，卖糖葫芦的男人摘下一支糖葫芦，笑到:“给你，不收钱。”孩子赶紧起身，摇摇头，腼腆一笑，撒腿跑了。 那之后，再也没有看到孩子的身影。 石柔告诉他有天放学，裴钱拽着一只死了的大白鹅脖子，扛着回到了骑龙巷铺子，然后去将大白鹅埋在了不知道什么地方。裴钱当时在自己屋子里边一个人抄着书。 停顿片刻，陈平安眼神坚毅道:“那么就算上我一个！”又一个停顿，陈平安笑容灿烂，“我会让他知道什么叫天底下最快的剑。” 裴钱便高高跃起，落在墙头之上，纵身飞跃，转瞬即逝。如那崔东山锁看书上所写。跃而登屋，瓦片无声，时方月明，去如飞鸟。 陈平安笑到:”山下的市井坊间，年关难过年年过”。 这封家书的末尾，陈平安答应裴钱，他已经点头答应，在自己开山大弟子的鼎力引荐之下，正式擢升哑巴湖大水怪周米粒，为落魄山右护法，并且准许裴钱亲自将此事昭告落魄山上上下下。 孩子低着头，双手使劲攥紧系挂箩筐的绳子，摇摇晃晃，离开了宅子和巷子，再也没有回家。 李二瞥了眼那盘故意被放在陈平安手边的菜，结果发现媳妇瞥了眼自己，李二便懂了，这盘冬笋炒肉，没他事儿。 崔东山陪着裴钱直奔灵芝斋，结果把裴钱看得愁眉不展苦兮兮，那些物件宝贝，琳琅满目是不假，看着都喜欢，只分很喜欢和一般喜欢，可是她根本买不起啊，哪怕裴钱逛完了灵芝斋楼上楼下、左左右右的所有大小角落，依旧没能发现一件自己掏腰包可以买到手的礼物，只是裴钱直到病恹恹走出灵芝斋，也没跟崔东山借钱，崔东山也没开口说要借钱，两人再去麋鹿崖那边的山脚店铺一条街。裴钱一下子如鱼得水，欢天喜地，这儿东西多，价格还不贵，几颗雪花钱的物件，茫茫多，挑花了眼。掂量了一下钱袋子，底气十足，她走路的时候，就眉开眼笑了。也就是这儿人多，不然不耍一套疯魔剑法，都无法表达她心中的高兴。街道上熙熙攘攘，从浩然天下来此游历的女子修士居多，光是她们各有千秋的发髻衣饰，就让裴钱看得啧啧称奇，有那两髻高耸如青山、犀角梳篱的妇人，长裙宽松袖如行云，哪怕不是姿容如何漂亮的女子，也显得婀娜多姿，还有那青丝盘起、再挽一髻、珠翠如花木攒簇的女子，看得裴钱那叫一个羡慕，她们的脑阔上都是顶着一座小小的金山银山呐。咋个天底下与自己一般有钱的人，就这么多嘞？ 小姑娘当时屁颠屁颠跟在裴钱身旁，使劲摇头，不说了不说了，自己之前是怕裴钱和暖树姐姐忘记，才多说两遍的。想事情可费劲。最后小米粒还叮嘱裴钱，要是以后忘记了，千万记得跟她说啊，到时候她就再说一遍。夜幕中，裴钱伸手掬水，明月在手。 举形望向朝暮那边，伸出手指在嘴边，摇摇头，示意朝暮千万不要说话。 朝暮蹑手蹑脚站起身，原来那位裴姐姐，抄着书，不知怎么的，在流泪。 裴钱在伤心，以后师父再敲她板栗的时候，师父好像再不用弯腰了。 那么以后就算师徒终于重逢了，再有一起游历山水，师父大概就再不会伸手再牵起一个小姑娘的手了。 怎么就长大了呢。 以前大白鹅小师兄说过一个笑话，问她这个大师姐，晓不晓得天底下哪个家伙的忧愁最多。 裴钱当然说是自己的师父，因为师父最喜欢想事情、最喜欢照顾别人啊。 小师兄当时笑着摇头，给出一个很混账的答案。 说是那个名叫“长大”的家伙。","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"审查与保密","slug":"审查与保密","date":"2022-04-26T15:35:22.000Z","updated":"2022-04-26T15:42:17.797Z","comments":true,"path":"2022/04/26/审查与保密/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/26/%E5%AE%A1%E6%9F%A5%E4%B8%8E%E4%BF%9D%E5%AF%86/","excerpt":"摘自舆论","text":"摘自舆论 在所谓的公共事务领域，保密机制无处不在。 因此，仔细推敲你形成自己的看法时所依据的那些事实信息，将是一件富于启发性的益事。 比如，想想你形成观点所依据的事实是被谁听到、看到、感受到的？具体数目是谁统计的？谁发布的？是那个人亲自告诉你的，还是告诉你的人也是经人转述？发布消息的人能接触到全部真相的几成？当这个人开口说“法国人认为如何如何”时，他考察了哪部分法国人？怎样考察的？在什么时间、什么地点？他获准跟哪些法国人交谈？他读什么报纸？那些法国人的观点又有何根据？你可以问问自己这些问题。 尽管它们难以回答，但是他们能提醒你：当你形成一个观点时，也许你对事件的真实情况远谈不上了解。 而这一警示本身就能帮助我们避免一些认知上的谬误。","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"django-admin返回一个excel文件的按钮函数记录","slug":"django-admin返回一个excel文件的按钮函数记录","date":"2022-04-23T11:19:30.000Z","updated":"2022-04-23T11:24:50.665Z","comments":true,"path":"2022/04/23/django-admin返回一个excel文件的按钮函数记录/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/23/django-admin%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AAexcel%E6%96%87%E4%BB%B6%E7%9A%84%E6%8C%89%E9%92%AE%E5%87%BD%E6%95%B0%E8%AE%B0%E5%BD%95/","excerpt":"需要返回一个excel文件","text":"需要返回一个excel文件 函数本体1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253def 统计到excel(self, request, queryset): ### 统计数量和 def 返回姓名的合计(姓名): 字典 = queryset.filter(姓名=姓名).aggregate(Sum(&#x27;******&#x27;),Sum(&#x27;****&#x27;)) return list(字典.values()) 姓名集合 = set(queryset.all().values_list(&#x27;姓名&#x27;,flat=True)) #主题去重 数据列表 = [[姓名,*返回姓名的合计(姓名)] for 姓名 in 姓名集合] #制造数据列表 rd_book = xlrd.open_workbook(&#x27;******&#x27;,formatting_info=True) wb = copy(rd_book) #复制一下表 wb_sheet = wb.get_sheet(0) # 设置单元格格式边框 borders = xlwt.Borders() borders.left = 1 borders.right = 1 borders.top = 1 borders.bottom = 1 style = xlwt.XFStyle() style.borders = borders # 设置单元格背景色为黄色 style1 = xlwt.XFStyle() pattern = xlwt.Pattern() pattern.pattern = xlwt.Pattern.SOLID_PATTERN pattern.pattern_fore_colour = 5 #5是黄色 style1.pattern = pattern style1.borders = borders # 设置单元格字体 font = xlwt.Font() font.name = &#x27;微软雅黑&#x27; font.bold = True style.font = font ## 一行一行往上套公式啊 for i in range(len(数据列表)): for j in range(len(数据列表[i])): wb_sheet.write(i+3,j,数据列表[i][j],style) 当前行 = str(i+4) wb_sheet.write(i+3,len(数据列表[i]),xlwt.Formula(&#x27;B3*B&#x27;+当前行+&#x27;+C3*C&#x27;+当前行+&#x27;+D3*D&#x27;+当前行+&#x27;+E3*E&#x27;+当前行+&#x27;+F3*F&#x27;+当前行+&#x27;+G3*G&#x27;+当前行+&#x27;+H3*H&#x27;+当前行+&#x27;+I3*I&#x27;+当前行+&#x27;+J3*J&#x27;+当前行+&#x27;+K3*K&#x27;+当前行+&#x27;+L3*L&#x27;+当前行+&#x27;+M3*M&#x27;+当前行+&#x27;+N3*N&#x27;+当前行+&#x27;+O3*O&#x27;+当前行+&#x27;+P3*P&#x27;+当前行),style1) wb_sheet.write(len(数据列表)+3,0,&#x27;数量合计&#x27;,style) for i in range(len(数据列表[0])-1): wb_sheet.write(len(数据列表)+3,i+1,xlwt.Formula(&#x27;SUM(&#x27;+chr(66+i)+&#x27;4:&#x27;+chr(66+i)+str(len(数据列表)+3)+&#x27;)&#x27;),style1) wb_sheet.write(len(数据列表)+4,0,&#x27;金额合计&#x27;,style1) for i in range(len(数据列表[0])-1): wb_sheet.write(len(数据列表)+4,i+1,xlwt.Formula(chr(66+i)+&#x27;3*&#x27;+chr(66+i)+str(len(数据列表)+4)),style1) wb_sheet.write(len(数据列表)+3,len(数据列表[0]),&#x27;&#x27;,style1) wb_sheet.write(len(数据列表)+4,len(数据列表[0]),xlwt.Formula(&#x27;SUM(B&#x27;+str(len(数据列表)+4+1)+&#x27;:P&#x27;+str(len(数据列表)+4+1)+&#x27;)&#x27;),style1) filename = &#x27;提成汇总表&#x27; #中文不行 我也不知道为什么 response = HttpResponse(content_type=&#x27;application/vnd.ms-excel&#x27;) response[&#x27;Content-Disposition&#x27;] = &#x27;attachment;filename=%s.xls&#x27; % filename wb.save(response) return response","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"}]},{"title":"DJango admin 增加自定义筛选器","slug":"DJango-admin-增加自定义筛选器","date":"2022-04-20T01:09:17.000Z","updated":"2022-04-20T01:13:28.855Z","comments":true,"path":"2022/04/20/DJango-admin-增加自定义筛选器/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/20/DJango-admin-%E5%A2%9E%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%AD%9B%E9%80%89%E5%99%A8/","excerpt":"增加自定义的筛选器","text":"增加自定义的筛选器 app/admin.py 增加一个只选取月份的筛选器1234567891011121314151617181920212223242526272829303132333435363738from django.contrib import adminclass UpdatedAtFilter(admin.SimpleListFilter): title = &#x27;选择月份&#x27; parameter_name = &#x27;月份&#x27; # 菜单列表 def lookups(self, request, model_admin): &quot;&quot;&quot; List of values to allow admin to select &quot;&quot;&quot; months = ( (1, &#x27;一月&#x27;), (2, &#x27;二月&#x27;), (3, &#x27;三月&#x27;), (4, &#x27;四月&#x27;), (5, &#x27;五月&#x27;), (6, &#x27;六月&#x27;), (7, &#x27;七月&#x27;), (8, &#x27;八月&#x27;), (9, &#x27;九月&#x27;), (10, &#x27;十月&#x27;), (11, &#x27;十一月&#x27;), (12, &#x27;十二月&#x27;) ) return months def queryset(self, request, queryset): &quot;&quot;&quot; Return the filtered queryset &quot;&quot;&quot; if self.value(): # DateTime Field can use __month to get its month value return queryset.filter(到期日__month=self.value()) else: return queryset@admin.register(催费表22年类)class ********(******): list_filter = (&#x27;***&#x27;,&#x27;***&#x27;,&#x27;***&#x27;,UpdatedAtFilter,) #筛选器","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"}]},{"title":"中文化Django自带后台名字","slug":"中文化Django自带后台名字","date":"2022-04-15T01:36:48.000Z","updated":"2022-04-15T01:44:46.911Z","comments":true,"path":"2022/04/15/中文化Django自带后台名字/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/15/%E4%B8%AD%E6%96%87%E5%8C%96Django%E8%87%AA%E5%B8%A6%E5%90%8E%E5%8F%B0%E5%90%8D%E5%AD%97/","excerpt":"自带后台各属性改中文","text":"自带后台各属性改中文 网站标题 头app/admin.py 123from django.contrib import adminadmin.site.site_header = &#x27;催费&#x27;admin.site.site_title = &#x27;催费&#x27; 大菜单app/__init__.py 123456789101112131415from os import pathfrom django.apps import AppConfig VERBOSE_APP_NAME = &#x27;大菜单名字&#x27; def get_current_app_name(file): return path.dirname(file).replace(&#x27;\\\\&#x27;, &#x27;/&#x27;).split(&#x27;/&#x27;)[-1] class AppVerboseNameConfig(AppConfig): name = get_current_app_name(__file__) verbose_name = VERBOSE_APP_NAME default_app_config = get_current_app_name(__file__) + &#x27;.__init__.AppVerboseNameConfig&#x27; 小菜单app/models.py 1234567from django.db import modelsclass model类(models.Model): pass class Meta: verbose_name = &#x27;小菜单名字&#x27; verbose_name_plural = &quot;&#x27;小菜单名字&quot; 字段名字app/models.py 1234from django.db import modelsclass model类(models.Model): age = models.CharField(&#x27;字段名字&#x27;,max_length=5,blank=True,null=True)","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"}]},{"title":"uniapp部署的网页端非主页刷新404问题的解决方案","slug":"uniapp部署的网页端非主页刷新404问题的解决方案","date":"2022-04-08T15:16:08.000Z","updated":"2022-04-08T15:19:57.953Z","comments":true,"path":"2022/04/08/uniapp部署的网页端非主页刷新404问题的解决方案/","link":"","permalink":"https://zhongkangjk.github.io/2022/04/08/uniapp%E9%83%A8%E7%BD%B2%E7%9A%84%E7%BD%91%E9%A1%B5%E7%AB%AF%E9%9D%9E%E4%B8%BB%E9%A1%B5%E5%88%B7%E6%96%B0404%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","excerpt":"在nginx增加一行","text":"在nginx增加一行 123location / &#123; try_files $uri $uri/ /index.html;&#125; 实测么的问题，但其实我不知道为啥，无它，百度尔","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"前端","slug":"计算机/前端","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"uniapp","slug":"uniapp","permalink":"https://zhongkangjk.github.io/tags/uniapp/"}]},{"title":"合成单张发票PDF到一个PDF方便打印","slug":"合成单张发票PDF到一个PDF方便打印","date":"2022-03-25T06:04:01.000Z","updated":"2022-03-25T06:12:38.029Z","comments":true,"path":"2022/03/25/合成单张发票PDF到一个PDF方便打印/","link":"","permalink":"https://zhongkangjk.github.io/2022/03/25/%E5%90%88%E6%88%90%E5%8D%95%E5%BC%A0%E5%8F%91%E7%A5%A8PDF%E5%88%B0%E4%B8%80%E4%B8%AAPDF%E6%96%B9%E4%BE%BF%E6%89%93%E5%8D%B0/","excerpt":"发票pdf都是占一张A4纸，给他合成到一起两张打一页","text":"发票pdf都是占一张A4纸，给他合成到一起两张打一页 转载自不知名123456789101112131415161718192021222324252627282930313233343536import osfrom PyPDF2 import PdfFileReaderfrom PyPDF2 import PdfFileWriterprint(&quot;将需要转换的文件夹拖入命令行 按回车（默认为此文件所在目录）&quot;)workpath = input()if workpath == &#x27;&#x27;: workpath = os.getcwd()output = os.path.join(workpath,&quot;合并后的.pdf&quot;)filelist = []files = os.listdir(workpath)for file in files: if file.split(&#x27;.&#x27;)[-1] in [&#x27;pdf&#x27;, &#x27;PDF&#x27;]: filelist.append(os.path.join(workpath, file))filenum = len(filelist)print(&quot;共找到%d个pdf文件&quot; %filenum) writer = PdfFileWriter() #实例化写类for i in range(filenum): pageobj = PdfFileReader(filelist[i]).getPage(0) if i%2 == 0: blankpage = writer.addBlankPage(610,810) blankpage.mergeTranslatedPage(pageobj,0,410) else: blankpage.mergeTranslatedPage(pageobj,0,0)# writer.removeLinks() # 移除交互链接,部分发票pdf文件在位移后会有图章重复的情况,需要移除.writer.write(open(output,&#x27;wb&#x27;)) # 写入新的文件,完成合并.print(&quot;转换成功 输出文件&quot;,output)#如果是在当前文件夹，最好把结果文件处理到别的地方#个别发票平台移除交互链接会把签章去掉","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"pdf","slug":"pdf","permalink":"https://zhongkangjk.github.io/tags/pdf/"}]},{"title":"django导入更新数据脚本","slug":"django导入更新数据脚本","date":"2022-03-23T06:35:07.000Z","updated":"2022-04-26T16:27:05.059Z","comments":true,"path":"2022/03/23/django导入更新数据脚本/","link":"","permalink":"https://zhongkangjk.github.io/2022/03/23/django%E5%AF%BC%E5%85%A5%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE%E8%84%9A%E6%9C%AC/","excerpt":"把操作django数据库的导入更新操作汇总一下以备参考","text":"把操作django数据库的导入更新操作汇总一下以备参考 之前利用爬虫更新表内数据和用时间计算表数据的日更操作脚本import os,sys,djangoimport asyncio,datetime,calendarimport httpx,json,time,mathfrom dateutil.relativedelta import relativedeltafrom django.db.models import Qimport smtplibfrom email.mime.multipart import MIMEMultipartfrom email.mime.text import MIMETextfrom email.mime.application import MIMEApplicationproject_path = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))sys.path.append(project_path)os.environ[&#x27;DJANGO_SETTINGS_MODULE&#x27;] = &#x27;shuai4.settings&#x27;django.setup()from cuifei.models import 催费表22年类,可收表19年,可收表20年,催费表类from shuju.models import 数据通知表类def 取结果(r): if r[&#x27;obj&#x27;]: j = [] for i in r[&#x27;obj&#x27;]: j.append(i[&#x27;fwqx&#x27;]) return max(j),r[&#x27;obj&#x27;][0][&#x27;jbrdh&#x27;] else: return None,Noneheaders = &#123; &#x27;Content-Type&#x27;: &#x27;application/json&#x27;, &#x27;Authorization&#x27;: &#x27;***&#x27;,&#125;url_by_税号 = &#x27;***&#x27;查税号URL= &#x27;***&#x27;文本 = []# print(催费表22年类.objects.all()[:5])queryset = 催费表22年类.objects.all()def 更新到期日和时间(queryset): async def 爬(client,body): def 保存结果(结果,body): if 结果[0]: body.到期日 = 结果[0] # body.经办人电话 = 结果[1] body.save(update_fields=[&#x27;到期日&#x27;]) r = await client.post(url_by_税号,headers=headers, data=json.dumps(&#123;&#x27;khsbh&#x27;: body.税号,&#125;),timeout=None) 结果 = 取结果(r.json()) if 结果[0]: 保存结果(结果,body) else: 用名称查的data = json.dumps(&#123;&#x27;count&#x27;:100,&#x27;keyword&#x27;: body.公司名称,&#x27;page&#x27;:0&#125;) r = await client.post(查税号URL,headers=headers, data=用名称查的data,timeout=None) res_dict = r.json() if res_dict[&#x27;obj&#x27;]: 税号1 = res_dict[&#x27;obj&#x27;][-1][&#x27;khsbh&#x27;] r1 = await client.post(url_by_税号,headers=headers, data=json.dumps(&#123;&#x27;khsbh&#x27;: 税号1,&#125;),timeout=None) 结果1 = 取结果(r1.json()) 保存结果(结果1,body) else: return None,None async def 跑(): async with httpx.AsyncClient() as client: task_list = [] for i in queryset: req = 爬(client,i) task = asyncio.create_task(req) task_list.append(task) await asyncio.gather(*task_list) start = time.time() asyncio.run(跑()) end = time.time() print(end-start) print(&#x27;查日期完成于&#x27;+time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())) # global b # b = &#x27;查日期完成于&#x27;+time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())+&#x27;用时&#x27;+str(end-start)+&#x27;秒&#x27; 文本.append(&#x27;查日期完成于&#x27;+time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())+&#x27;用时&#x27;+str(end-start)+&#x27;秒&#x27;)def 更新可收年份(queryset): for i in queryset: if i.到期日: if type(i.到期日) == type(&#x27;s&#x27;): 到期日 = datetime.datetime.strptime(i.到期日,&#x27;%Y-%m-%d&#x27;).date() else: 到期日 = i.到期日 # print(i.公司名称,i.税号) a = 可收表19年.objects.filter(公司名称__exact = i.公司名称).count() if a &gt; 0: i.可收19 = 1 else: i.可收19 = 0 b = 可收表20年.objects.filter(Q(公司名称__exact = i.公司名称)|Q(税号__exact = i.税号)).count() if b &gt; 0: i.可收20 = 1 else: i.可收20 = 0 c = 催费表类.objects.filter(Q(公司名称__exact = i.公司名称)|Q(税号__exact = i.税号)).count() if c &gt; 0: i.可收21 = 1 else: i.可收21 = 0 # print(i.到期日) # print(datetime.date.today()) 年 = datetime.datetime.now().year 月 = datetime.datetime.now().month 下一个月 = (datetime.datetime.now()+relativedelta(months=1)).month # 日 = datetime.datetime.now().day 新日 = calendar.monthrange(年,下一个月)[1] # print(新日) # print(datetime.date(年,月,新日)==i.到期日) if datetime.date(年,下一个月,新日)==到期日: 差年= 1 else: 差年 = math.ceil((datetime.date(年,下一个月,新日)-到期日)/datetime.timedelta(days=365)) # print(差年) 到期日年份 = 到期日.year 可收字典 = &#123;2015:1,2016:1,2017:1,2018:1,2019:i.可收19,2020:i.可收20,2021:i.可收21,2022:1&#125; # 年份 = sum(listn[:差年]) j = 0 for i1 in range(到期日年份,到期日年份+差年): # print(i1) j += 可收字典[i1] # print(j) i.几年 = j i.save(update_fields=[&#x27;可收19&#x27;,&#x27;可收20&#x27;,&#x27;可收21&#x27;,&#x27;几年&#x27;]) print(&#x27;查可收几年完成于&#x27;+time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())) # global d # d = (&#x27;\\n&#x27;+&#x27;查可收几年完成于&#x27;+time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())) 文本.append(&#x27;查可收几年完成于&#x27;+time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime()))更新到期日和时间(queryset)更新可收年份(queryset)def 发送邮件(邮件标题,称呼,邮件文字,发件人邮箱,密码,收件人邮箱,附件路径列表,附件命名列表): msg = MIMEMultipart() msg[&quot;Subject&quot;] = 邮件标题 msg[&quot;From&quot;] = 发件人邮箱 msg[&quot;To&quot;] = 称呼 #这是文字部分 part = MIMEText(邮件文字) msg.attach(part) #这是附件部分 for 附件路径,附件命名 in zip(附件路径列表,附件命名列表): part = MIMEApplication(open(附件路径,&#x27;rb&#x27;).read()) part.add_header(&#x27;Content-Disposition&#x27;, &#x27;attachment&#x27;, filename=附件命名) msg.attach(part) s = smtplib.SMTP(&quot;smtp.qq.com&quot;, timeout=60)#SMTP服务的网址 try: s.login(发件人邮箱, 密码) s.sendmail(发件人邮箱, 收件人邮箱, msg.as_string())#收件人邮箱可以是列表 s.close() print(&quot;发送成功&quot;) except: print(&quot;发送失败&quot;)def 拿昨天的老数据(区域): # 今天 = datetime.date.today() 昨天 = datetime.date.today() - datetime.timedelta(days=1) # print(昨天) # print(type(昨天)) a = 数据通知表类.objects.filter(Q(日期 = 昨天)&amp;Q(区域=区域)).values()[0] # for i in a: # print(i) return adef 获得今天的新数据并存数据库(区域): # 崂山 今天 = datetime.date.today() 能查到日期的户数 = 催费表22年类.objects.filter(Q(到期日__isnull=False)&amp;Q(区域=区域)).count() 查不到日期的户数 = 催费表22年类.objects.filter(Q(到期日__isnull=True)&amp;Q(区域=区域)).count() 年 = datetime.datetime.now().year 月 = datetime.datetime.now().month 日 = calendar.monthrange(年,月)[1] 下一个月 = (datetime.datetime.now()+relativedelta(months=1)).month 下一个月日 = calendar.monthrange(年,下一个月)[1] 到期日为当月的户数 = 催费表22年类.objects.filter(Q(到期日__range=(datetime.date(年, 月, 1),datetime.date(年, 月, 日)))&amp;Q(区域=区域)).count() 到期日为下月的户数 = 催费表22年类.objects.filter(Q(到期日__range=(datetime.date(年, 下一个月, 1),datetime.date(年, 下一个月,下一个月日)))&amp;Q(区域=区域)).count() 前一个月 = (datetime.datetime.now()-relativedelta(months=1)).month 新日 = calendar.monthrange(年,前一个月)[1] 今年已逾期的户数 = 催费表22年类.objects.filter(Q(到期日__range=(datetime.date(年, 1, 1),datetime.date(年, 前一个月, 新日)))&amp;Q(区域=区域)).count() 下两个月 = (datetime.datetime.now()+relativedelta(months=2)).month 今年还未到期的户数 = 催费表22年类.objects.filter(Q(到期日__range=(datetime.date(年,下两个月, 1),datetime.date(年, 12, 31)))&amp;Q(区域=区域)).count() 往年到期户 = 催费表22年类.objects.filter(Q(到期日__lt=datetime.date(年,1,1))&amp;Q(区域=区域)).count() # &amp;Q(几年__gte=1) 更新数据 = &#123; &#x27;日期&#x27;:今天, &#x27;区域&#x27;:区域, &#x27;能查到日期的户数&#x27;:能查到日期的户数, &#x27;查不到日期的户数&#x27;:查不到日期的户数, &#x27;到期日为当月的户数&#x27;:到期日为当月的户数, &#x27;到期日为下月的户数&#x27;:到期日为下月的户数, &#x27;今年已逾期的户数&#x27;:今年已逾期的户数, &#x27;今年还未到期的户数&#x27;:今年还未到期的户数, &#x27;往年到期户&#x27;:往年到期户 &#125; #存数据 数据通知表类.objects.update_or_create(defaults=更新数据,日期=今天,区域=区域) a = 数据通知表类.objects.filter(Q(日期 = 今天)&amp;Q(区域=区域)).values()[0] # print(a) return a崂山新数据字典 = 获得今天的新数据并存数据库(&#x27;崂山&#x27;)市南新数据字典 = 获得今天的新数据并存数据库(&#x27;市南&#x27;)市北新数据字典 = 获得今天的新数据并存数据库(&#x27;市北&#x27;)李沧新数据字典 = 获得今天的新数据并存数据库(&#x27;李沧&#x27;)崂山老数据字典 = 拿昨天的老数据(&#x27;崂山&#x27;)市南老数据字典 = 拿昨天的老数据(&#x27;市南&#x27;)市北老数据字典 = 拿昨天的老数据(&#x27;市北&#x27;)李沧老数据字典 = 拿昨天的老数据(&#x27;李沧&#x27;)def 增加数据(区域,新数据字典,老数据字典): 文本.append(区域) 文本.append(&#x27;能查到日期的户数：&#x27;+str(新数据字典[&#x27;能查到日期的户数&#x27;])+&#x27;户 &#x27;+str(新数据字典[&#x27;能查到日期的户数&#x27;]-老数据字典[&#x27;能查到日期的户数&#x27;])) 文本.append(&#x27;查不到日期的户数：&#x27;+str(新数据字典[&#x27;查不到日期的户数&#x27;])+&#x27;户 &#x27;+str(新数据字典[&#x27;查不到日期的户数&#x27;]-老数据字典[&#x27;查不到日期的户数&#x27;])) 文本.append(&#x27;到期日为当月的户数：&#x27;+str(新数据字典[&#x27;到期日为当月的户数&#x27;])+&#x27;户 &#x27;+str(新数据字典[&#x27;到期日为当月的户数&#x27;]-老数据字典[&#x27;到期日为当月的户数&#x27;])) 文本.append(&#x27;到期日为下月的户数：&#x27;+str(新数据字典[&#x27;到期日为下月的户数&#x27;])+&#x27;户 &#x27;+str(新数据字典[&#x27;到期日为下月的户数&#x27;]-老数据字典[&#x27;到期日为下月的户数&#x27;])) 文本.append(&#x27;今年已逾期的户数：&#x27;+str(新数据字典[&#x27;今年已逾期的户数&#x27;])+&#x27;户 &#x27;+str(新数据字典[&#x27;今年已逾期的户数&#x27;]-老数据字典[&#x27;今年已逾期的户数&#x27;])) 文本.append(&#x27;今年还未到期的户数：&#x27;+str(新数据字典[&#x27;今年还未到期的户数&#x27;])+&#x27;户 &#x27;+str(新数据字典[&#x27;今年还未到期的户数&#x27;]-老数据字典[&#x27;今年还未到期的户数&#x27;])) 文本.append(&#x27;往年到期户：&#x27;+str(新数据字典[&#x27;往年到期户&#x27;])+&#x27;户 &#x27;+str(新数据字典[&#x27;往年到期户&#x27;]-老数据字典[&#x27;往年到期户&#x27;])) # 文本.append(&#x27;往年到期户茫茫多&#x27;)增加数据(&#x27;崂山&#x27;,崂山新数据字典,崂山老数据字典)增加数据(&#x27;市南&#x27;,市南新数据字典,市南老数据字典)增加数据(&#x27;市北&#x27;,市北新数据字典,市北老数据字典)增加数据(&#x27;李沧&#x27;,李沧新数据字典,李沧老数据字典)c = &#x27;&#x27;for i in 文本: print(i) c += (&#x27;\\n&#x27;+i)print(c)发送邮件(&#x27;更新通知&#x27;,&#x27;崂山&#x27;,c,&#x27;**&#x27;,&#x27;**&#x27;,[&#x27;**&#x27;,&#x27;**&#x27;],&#x27;&#x27;,&#x27;&#x27;) 删除数据的脚本12345678910111213141516171819202122232425262728293031323334353637383940import pandas as pdimport os,sys,djangoimport xlrdclass 打开excel文件(): def __init__(self,文件名,第几个表): self.文件 = xlrd.open_workbook(filename = 文件名) self.表 = self.文件.sheet_by_index(第几个表-1) def 获得横向资料(self): self.数据 = [self.表.row_values(i) for i in range(self.表.nrows)] return self.数据 def 获得纵向资料(self): self.数据 = [self.表.col_values(i) for i in range(self.表.ncols)] return self.数据 def 获得名称列数据(self,名称): def 获得列序号(表名,查找字段名): 列序号 = None for i in range(表名.ncols): if (表名.cell_value(0,i) == 查找字段名): 列序号 = i break return 列序号 print(获得列序号(self.表,名称)) self.数据 = self.表.col_values(获得列序号(self.表,名称),1) return self.数据文件 = 打开excel文件(&#x27;市南可收费注销.xls&#x27;,1)list1 = 文件.获得名称列数据(&#x27;单位名称&#x27;)project_path = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))sys.path.append(project_path)os.environ[&#x27;DJANGO_SETTINGS_MODULE&#x27;] = &#x27;shuai4.settings&#x27;django.setup()from cuifei.models import 催费表类催费表类.objects.filter(公司名称__in=list1).delete() 填充数据的脚本1234567891011121314151617181920212223242526272829303132333435import pandas as pdimport os,sys,djangoclass 提取类(): def __init__(self,文件名,第几个表): self.文件 = pd.read_excel(文件名, 第几个表) def 拿取数据(self,从第几行开始,*列名): self.数据 = self.文件.loc[从第几行开始-2:,[*列名,]] #print(self.数据) return self.数据销售表 = 提取类(&#x27;不可收名单.xls&#x27;,0)销售数据 = 销售表.拿取数据(2,&#x27;纳税人识别号&#x27;,&#x27;纳税人名称&#x27;)销售数据 = 销售数据.values.tolist()project_path = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))sys.path.append(project_path)os.environ[&#x27;DJANGO_SETTINGS_MODULE&#x27;] = &#x27;shuai4.settings&#x27;django.setup()from cuifei.models import 催费表22年类# 催费表22年类.objects.all().update(是否可收=&#x27;可收&#x27;)for i in 销售数据: if 催费表22年类.objects.filter(税号=i[0]): 催费表22年类.objects.filter(税号=i[0]).update(是否可收=&#x27;不可收&#x27;) print(i[1]+&#x27;,通过税号确定不可收&#x27;) else: if 催费表22年类.objects.filter(公司名称=i[1]): 催费表22年类.objects.filter(公司名称=i[1]).update(是否可收=&#x27;不可收&#x27;) print(i[1]+&#x27;通过名称确定不可收&#x27;) else: print(i[1]+&#x27;发行表没有的不可收企业&#x27;) 批量导入数据脚本123456789101112131415161718192021222324252627282930import pandas as pdimport os,sys,djangoclass 提取类(): def __init__(self,文件名,第几个表): self.文件 = pd.read_excel(文件名, 第几个表) def 拿取数据(self,从第几行开始,*列名): self.数据 = self.文件.loc[从第几行开始-2:,[*列名,]] #print(self.数据) return self.数据销售表 = 提取类(&#x27;导入模板.xlsx&#x27;,0)销售数据 = 销售表.拿取数据(2,&#x27;公司名称&#x27;,&#x27;区域&#x27;,&#x27;税号&#x27;,&#x27;性质&#x27;)销售数据 = 销售数据.values.tolist()project_path = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))sys.path.append(project_path)os.environ[&#x27;DJANGO_SETTINGS_MODULE&#x27;] = &#x27;shuai4.settings&#x27;django.setup()from cuifei.models import 催费表类list = []for i in 销售数据: # print(i[4]) list.append(催费表类(公司名称 = i[0],区域 = i[1],税号 = i[2],性质 = i[3]))催费表类.objects.bulk_create(list) 更新某一列数据脚本12345678910111213141516171819202122232425262728293031323334import pandas as pdimport os,sys,djangoclass 提取类(): def __init__(self,文件名,第几个表): self.文件 = pd.read_excel(文件名, 第几个表) def 拿取数据(self,从第几行开始,*列名): self.数据 = self.文件.loc[从第几行开始-2:,[*列名,]] #print(self.数据) return self.数据销售表 = 提取类(&#x27;/www/wwwroot/shuai4-django-env3.7/shuai4-django/时间.xls&#x27;,0)销售数据 = 销售表.拿取数据(2,&#x27;税号&#x27;,&#x27;名称&#x27;,&#x27;服务期限&#x27;)销售数据 = 销售数据.values.tolist()project_path = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))sys.path.append(project_path)os.environ[&#x27;DJANGO_SETTINGS_MODULE&#x27;] = &#x27;shuai4.settings&#x27;django.setup()from cuifei.models import 催费表22年类for i in 销售数据: if 催费表22年类.objects.filter(税号=i[0]): 催费表22年类.objects.filter(税号=i[0]).update(到期日=i[2]) print(i[0]+&#x27;成功&#x27;) else: if 催费表22年类.objects.filter(公司名称=i[1]): 催费表22年类.objects.filter(公司名称=i[1]).update(到期日=i[2]) print(i[0]+&#x27;成功&#x27;) else: print(i[0]+&#x27;失败&#x27;)","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"}]},{"title":"使用易即今日API定时更新每日新闻图片","slug":"使用易即今日API定时更新每日新闻图片","date":"2022-03-09T08:05:24.000Z","updated":"2022-03-09T08:08:21.159Z","comments":true,"path":"2022/03/09/使用易即今日API定时更新每日新闻图片/","link":"","permalink":"https://zhongkangjk.github.io/2022/03/09/%E4%BD%BF%E7%94%A8%E6%98%93%E5%8D%B3%E4%BB%8A%E6%97%A5API%E5%AE%9A%E6%97%B6%E6%9B%B4%E6%96%B0%E6%AF%8F%E6%97%A5%E6%96%B0%E9%97%BB%E5%9B%BE%E7%89%87/","excerpt":"更新脚本和定时任务","text":"更新脚本和定时任务 news-updated.py 12345678910import requestsurl = &quot;http://api.soyiji.com//news_jpg&quot;response = requests.request(&quot;GET&quot;, url)res = eval(response.text)图片地址 = res[&#x27;url&#x27;]headers = &#123; &#x27;Referer&#x27;: &#x27;safe.soyiji.com&#x27;&#125;response = requests.request(&quot;GET&quot;, 图片地址, headers=headers)# 图片文件保存with open(&#x27;/www/wwwroot/shuai4-django-env3.7/shuai4-django/collected_static/1.jpg&#x27;, &#x27;wb&#x27;) as f: f.write(response.content) 由于文件夹已经受nginx管理，不需要其他操作 绝对路径执行 1/www/wwwroot/shuai4-django-env3.7/bin/python /www/wwwroot/shuai4-django-env3.7/shuai4-django/news-updated.py","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"爬虫","slug":"爬虫","permalink":"https://zhongkangjk.github.io/tags/%E7%88%AC%E8%99%AB/"}]},{"title":"Django日常操作","slug":"Django日常操作","date":"2022-03-09T07:52:21.000Z","updated":"2022-03-23T06:31:53.731Z","comments":true,"path":"2022/03/09/Django日常操作/","link":"","permalink":"https://zhongkangjk.github.io/2022/03/09/Django%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/","excerpt":"日常复制","text":"日常复制 创建应用django-admin startproject 项目名字 创建APPpython manage.py startapp APP名字 创建APP以后settings中增加INSTALLED_APPS,APP内增加分url 123456789# 引入pathfrom django.urls import path# 正在部署的应用的名称app_name = &#x27;APP名称&#x27;urlpatterns = [ # 目前还没有urls] 总url引入分url 12345from django.urls import path, includeurlpatterns = [ # 新增代码，配置app的url path(&#x27;定义url/&#x27;, include(&#x27;APP名称.urls&#x27;, namespace=&#x27;APP名称&#x27;)),] 写API函数分url 12345678from django.urls import pathfrom APP名称 import viewsapp_name = &#x27;APP名称&#x27;urlpatterns = [ path(&#x27;list/&#x27;,views.hellolist),] views 1234567from rest_framework.decorators import api_viewfrom rest_framework.response import Response@api_view([&#x27;GET&#x27;])def hellolist(request): list = [1,2,3,4,5] return Response(list)","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"}]},{"title":"Django伪监控小脚本","slug":"Django伪监控小脚本","date":"2022-03-09T07:10:51.000Z","updated":"2022-03-23T06:31:55.826Z","comments":true,"path":"2022/03/09/Django伪监控小脚本/","link":"","permalink":"https://zhongkangjk.github.io/2022/03/09/Django%E4%BC%AA%E7%9B%91%E6%8E%A7%E5%B0%8F%E8%84%9A%E6%9C%AC/","excerpt":"在django加个小模块来监控别的电脑情况以及执行指令","text":"在django加个小模块来监控别的电脑情况以及执行指令 服务端12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#主urlpath(&#x27;utils/&#x27;, include(&#x27;utils.urls&#x27;)),#分urlpath(&#x27;xinxiview/&#x27;,views.XinxiView.as_view()),path(&#x27;zhilingview/&#x27;,views.ZhilingView.as_view()),#modelfrom django.db import modelsclass Dictionary(models.Model): # 字典名称 不可重复 name = models.CharField(max_length=50, unique=True) # 字典内容 data = models.TextField(blank=True,null=True) def __str__(self): return self.name#viewclass XinxiView(APIView): # permission_classes = [IsAuthenticated] def get(self, request, format=None): #获得model Dictionary里名称为税控盘信息的内容 税控盘信息 = Dictionary.objects.get(name=&#x27;税控盘信息&#x27;).data UK信息 = Dictionary.objects.get(name=&#x27;UK信息&#x27;).data 税控盘信息 = 税控盘信息.split(&#x27;\\n&#x27;) UK信息 = UK信息.split(&#x27;\\n&#x27;) 信息列表 = [税控盘信息,UK信息] return Response(信息列表) def post(self, request, format=None): name = request.data.get(&#x27;name&#x27;) xinxi = request.data.get(&#x27;xinxi&#x27;) # 更改Directory里name为name的body为xinxi Dictionary.objects.filter(name=name).update(data=xinxi) return Response(&#x27;更新成功&#x27;)class ZhilingView(APIView): # permission_classes = [IsAuthenticated] def get(self, request, format=None): name = request.query_params.get(&#x27;name&#x27;) # 获得model Dictionary里名称为name的body zhiling = Dictionary.objects.get(name=name).data Dictionary.objects.filter(name=name).update(data=&#x27;&#x27;) return Response(zhiling) def post(self, request, format=None): zhiling1 = request.data.get(&#x27;税控盘指令&#x27;) zhiling2 = request.data.get(&#x27;UK指令&#x27;) # 更改Directory里name为name的body为xinxi Dictionary.objects.filter(name=&#x27;税控盘指令&#x27;).update(data=zhiling1) Dictionary.objects.filter(name=&#x27;UK指令&#x27;).update(data=zhiling2) return Response(&#x27;更新指令成功&#x27;) 被监控端更新数据&amp;执行命令12345678910111213141516171819202122232425262728293031323334353637383940import requests,os,time,jsonimport psutilxinxiurl = &#x27;http://###/utils/xinxiview/&#x27;zhilingurl = &#x27;http://###/utils/zhilingview/&#x27;# 检测进程是否存在的函数 def check_process(process_name): for proc in psutil.process_iter(): try: # 检查进程名称返回进程对象 if process_name in proc.name(): return proc.pid except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess): pass return Nonedef 工作(): a = &#x27;&#x27; if check_process(&#x27;skp_usb_moniter.exe&#x27;): a+= &#x27;税控接口服务运行中,&#x27; else: a+= &#x27;税控接口服务未运行,&#x27; if check_process(&#x27;SunloginClient.exe&#x27;): a+= &#x27;向日葵运行中,&#x27; else: a+= &#x27;向日葵未运行,&#x27; print(a) r = requests.post(xinxiurl, data=&#123;&#x27;name&#x27;: &#x27;税控盘信息&#x27;, &#x27;xinxi&#x27;: a&#125;) print(r.text) # 发送get请求 r = requests.get(zhilingurl,params=&#123;&#x27;name&#x27;: &#x27;税控盘指令&#x27;&#125;) 指令 = r.text if 指令 == &#x27;&quot;重启程序&quot;&#x27;: os.system(&#x27;D:\\Desktop\\s.bat&#x27;) else: print(指令)while True: 工作() time.sleep(60) 前端获取数据&amp;发送指令12345678910111213//获取盘柜信息 vm.$u.api.getPanguiInfo = () =&gt; vm.$u.get(&#x27;/utils/xinxiview/&#x27;); //发送指令 vm.$u.api.sendOrder = (params) =&gt; vm.$u.post(&#x27;/utils/zhilingview/&#x27;, params);async reloadShuikongpan() &#123; const res = await this.$u.api.sendOrder(&#123; 税控盘指令: &#x27;重启程序&#x27; &#125;) this.$u.toast(res) &#125;,const res = await this.$u.api.getPanguiInfo()","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"},{"name":"前端","slug":"前端","permalink":"https://zhongkangjk.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"共享文件到局域网ip","slug":"共享文件到局域网ip","date":"2022-03-09T03:37:19.000Z","updated":"2022-03-09T03:38:15.348Z","comments":true,"path":"2022/03/09/共享文件到局域网ip/","link":"","permalink":"https://zhongkangjk.github.io/2022/03/09/%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%88%B0%E5%B1%80%E5%9F%9F%E7%BD%91ip/","excerpt":"局域网共享文件到ip","text":"局域网共享文件到ip 1234567891011121314import http.serverimport socketserverimport socketPORT = 80myname = socket.getfqdn(socket.gethostname())myaddr = socket.gethostbyname(myname)print(&#x27;请在局域网访问&#x27;+myaddr)Handler = http.server.SimpleHTTPRequestHandlerwith socketserver.TCPServer((&quot;&quot;, PORT), Handler) as httpd: #print(&quot;serving at port&quot;, PORT) httpd.serve_forever()","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"}]},{"title":"uniappH5转windows的步骤","slug":"uniappH5转windows的步骤","date":"2022-03-08T06:58:30.000Z","updated":"2022-03-23T06:30:16.588Z","comments":true,"path":"2022/03/08/uniappH5转windows的步骤/","link":"","permalink":"https://zhongkangjk.github.io/2022/03/08/uniappH5%E8%BD%ACwindows%E7%9A%84%E6%AD%A5%E9%AA%A4/","excerpt":"如标题","text":"如标题 安装nodejs安装electron（主程序）1npm install electron -g 安装electron-packager（打包用）1npm install electron-packager -g uniapp的manifest.json修改根目录下的manifest.json-h5配置 运行的基础路径修改为： 1./ 不然打包出来会出现白屏，读取不到，因为打包出来的h5默认加载地址为/static/ 1去掉启用https协议 不然会出现网络无法加载，去掉https不影响你请求后端的https协议。 h5打包HbuilderX顶部菜单栏-发布-h5手机版发行-发行 发现的默认目录为：unpackage\\dist\\build\\h5 新建文件123复制代码你的项目目录/├── static└── index.html 新建package.json和main.js12345复制代码新建后项目目录/├── static├── package.json├── main.js└── index.html 在 package.json 中添加如下内容123456复制代码&#123; &quot;name&quot; : &quot;app-name&quot;, &quot;version&quot; : &quot;0.1.0&quot;, &quot;main&quot; : &quot;main.js&quot;&#125; 在 main.js 中添加下面的内容，这个 main.js 文件就是上面 package.json 中的 “main”键 的值，所以可根据需要修改1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556const &#123;app, BrowserWindow,Menu&#125; = require(&#x27;electron&#x27;)const path = require(&#x27;path&#x27;)const url = require(&#x27;url&#x27;)// Keep a global reference of the window object, if you don&#x27;t, the window will// be closed automatically when the JavaScript object is garbage collected.let winfunction createWindow () &#123; Menu.setApplicationMenu(null) //取消菜单栏 // Create the browser window. win = new BrowserWindow(&#123;width: 375, height: 667&#125;) // and load the index.html of the app. win.loadURL(url.format(&#123; pathname: path.join(__dirname, &#x27;index.html&#x27;), protocol: &#x27;file:&#x27;, slashes: true &#125;)) // Open the DevTools. // win.webContents.openDevTools() // Emitted when the window is closed. win.on(&#x27;closed&#x27;, () =&gt; &#123; // Dereference the window object, usually you would store windows // in an array if your app supports multi windows, this is the time // when you should delete the corresponding element. win = null &#125;)&#125;// This method will be called when Electron has finished// initialization and is ready to create browser windows.// Some APIs can only be used after this event occurs.app.on(&#x27;ready&#x27;, createWindow)// Quit when all windows are closed.app.on(&#x27;window-all-closed&#x27;, () =&gt; &#123; // On macOS it is common for applications and their menu bar // to stay active until the user quits explicitly with Cmd + Q if (process.platform !== &#x27;darwin&#x27;) &#123; app.quit() &#125;&#125;)app.on(&#x27;activate&#x27;, () =&gt; &#123; // On macOS it&#x27;s common to re-create a window in the app when the // dock icon is clicked and there are no other windows open. if (win === null) &#123; createWindow() &#125;&#125;)// In this file you can include the rest of your app&#x27;s specific main process// code. You can also put them in separate files and require them here. 具体参考electron官网文档如果你的网页首页的文件名不是 “index.html”，那么请在 main.js 中将其中的 ‘index.html’ 修改为你的网页首页名 更新内容后再次使用HbuilderX生成h5前记得备份 package.json main.js打包1复制代码electron-packager . 可执行文件的文件名 --win --out 打包成的文件夹名 --arch=x64位还是32位 --electron-version版本号(不是你的h5版本号，是electron版本号) --overwrite --ignore=node_modules 示例（可直接复制下面代码）：1electron-packager . lan --win --out lan --arch=x64 --electron-version 17.1.0 --overwrite --ignore=node_modules --icon=2.ico","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"前端","slug":"计算机/前端","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://zhongkangjk.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"uniapp","slug":"uniapp","permalink":"https://zhongkangjk.github.io/tags/uniapp/"}]},{"title":"神武接下来的打造宝宝计划","slug":"神武接下来的打造宝宝计划","date":"2021-10-05T13:40:35.000Z","updated":"2022-03-09T11:44:59.104Z","comments":true,"path":"2021/10/05/神武接下来的打造宝宝计划/","link":"","permalink":"https://zhongkangjk.github.io/2021/10/05/%E7%A5%9E%E6%AD%A6%E6%8E%A5%E4%B8%8B%E6%9D%A5%E7%9A%84%E6%89%93%E9%80%A0%E5%AE%9D%E5%AE%9D%E8%AE%A1%E5%88%92/","excerpt":"在秋水的指导下懂了需要打造宝宝，计划","text":"在秋水的指导下懂了需要打造宝宝，计划 卡速两个卡速宝宝，一个带隐身一个不带隐身完全可以用罗成青瓷鸡这种垃圾的来做 参考如图 血攻可以就用我那个死骑，元宵吃31个攻，19个体 气势换吸血 感知审判少哪个都行 看护符 速度到420，气血加到3500，打符攻击争取到1520 感知群法雪舞洗出来了 敏捷不要，冰霜换感知 血3000 灵700到750 元宵吃体剩下法符石开红色 灵力 30+ 龟速宠小号可以洗洗 要鬼魂，鬼魂不吃冲击，不死的话能保证尾速拉人","categories":[{"name":"游戏","slug":"游戏","permalink":"https://zhongkangjk.github.io/categories/%E6%B8%B8%E6%88%8F/"},{"name":"神武","slug":"游戏/神武","permalink":"https://zhongkangjk.github.io/categories/%E6%B8%B8%E6%88%8F/%E7%A5%9E%E6%AD%A6/"}],"tags":[{"name":"神武","slug":"神武","permalink":"https://zhongkangjk.github.io/tags/%E7%A5%9E%E6%AD%A6/"}]},{"title":"本博客上线更新的方法","slug":"本博客上线更新的方法","date":"2021-10-02T11:43:10.000Z","updated":"2021-10-02T11:56:31.571Z","comments":true,"path":"2021/10/02/本博客上线更新的方法/","link":"","permalink":"https://zhongkangjk.github.io/2021/10/02/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E4%B8%8A%E7%BA%BF%E6%9B%B4%E6%96%B0%E7%9A%84%E6%96%B9%E6%B3%95/","excerpt":"gitpage还是稍微拉胯了点，还是部署到~上吧","text":"gitpage还是稍微拉胯了点，还是部署到~上吧 拉代码1git clone 我的博客代码 网站文件夹 写脚本在网站文件夹里建立一个脚本,记得给执行权限方便计划任务调用gengxin.sh 12345#！/bin/bashcd /www/wwwroot/网站文件夹git fetch --allgit reset --hard origin/mastergit pull 设置定时任务如题，定时执行一下拉取脚本就可以了","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"linux","slug":"计算机/linux","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://zhongkangjk.github.io/tags/linux/"}]},{"title":"兼听则明，偏信则暗","slug":"兼听则明，偏信则暗","date":"2021-09-20T07:31:16.000Z","updated":"2021-10-04T10:55:32.926Z","comments":true,"path":"2021/09/20/兼听则明，偏信则暗/","link":"","permalink":"https://zhongkangjk.github.io/2021/09/20/%E5%85%BC%E5%90%AC%E5%88%99%E6%98%8E%EF%BC%8C%E5%81%8F%E4%BF%A1%E5%88%99%E6%9A%97/","excerpt":"为自己对抗信息茧房写点东西","text":"为自己对抗信息茧房写点东西 很久没有过成长的感觉了 以前对自己成长的看法就像自然选择，通过遇到各种各样的事情，迈过它，然后变得更好，更像自己。 不知道什么时候开始接触到的东西越来越少，甚至不如以前 那个拿着BBK深夜在网上搜罗各行各业的书籍对自己未来进行畅想的自己 现在遇到的都是相同的事情，就算偶尔有些波澜，那就把它转换为跟从前类似的状况，然后用老办法对待他 懒 。 找了个锅 一定是无处不在的大数据推荐系统带来的信息茧房束缚了我 “在贴心的大数据式喂养下，用户依旧拥有选择的权利，却慢慢被剥夺了选择的能力与动力。 信息茧房进入了最终极状态 - 即便一个人的兴趣爱好是吃屎，大数据也能帮他找到一万个同好，并告诉他，你不孤单，请保持。 信息茧房使人们变得自满，易怒，常常走极端。 人们比曾经任何时代都更接近信息，却离探索真相越来越远。 ”@维京女侠 知乎看到的。 想起了自己使用知乎的一件趣事， 当时刚刚下载了知乎（也不知道是第几次，感觉以前有下载过，但很久了） 浏览到大概是个人生低谷相关的话题，刚好它遇到挫折的某件事是我战胜过的，于是发表了一些看法。 然后就一发不可收拾，每个几个小时，就是推送邀请回答，一模一样的问题，不同的人，还好我会屏蔽通知，但每次进入知乎就是一大串红色提醒，点进去都是那些，俨然一副我是相关问题大牛的样子。 我开始找屏蔽这个的操作，没找着，或者说没生效。 联系知乎客服， 时间有点久，记不清了，想打开知乎找找聊天记录，一番操作以后没找着，反正是没有结果的结果。 我在想如果所有的知乎使用者都是这种状态，那发展真的是， 我也不知道。 回想一下正题， 我得告诉自己对抗这个，虽然现在没什么方向，但随波逐流我肯定不乐意。 我不管，我最大。 主动检索信息，主动检索信息！","categories":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"pandas相关操作","slug":"pandas相关操作","date":"2021-09-05T12:53:22.000Z","updated":"2021-09-05T13:12:28.721Z","comments":true,"path":"2021/09/05/pandas相关操作/","link":"","permalink":"https://zhongkangjk.github.io/2021/09/05/pandas%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/","excerpt":"pandas的操作都记在这里吧","text":"pandas的操作都记在这里吧 pandas提取excel123456789101112import pandas as pdclass 提取类(): def __init__(self,文件名,第几个表): self.文件 = pd.read_excel(文件名, 第几个表) def 拿取数据(self,从第几行开始,*列名): self.数据 = self.文件.loc[从第几行开始-2:,[*列名,]] #print(self.数据) return self.数据# 处理日期和数字空值12345678910数据文件名 = &quot;名称.xlsx&quot;def 销售表提取(): 销售表 = 提取类(数据文件名,0) 销售数据 = 销售表.拿取数据(8234,&#x27;企业名称&#x27;,&#x27;日期&#x27;,&#x27;服务费发票&#x27;,&#x27;金额&#x27;,&#x27;支付方式&#x27;) 销售数据[&#x27;发票类型&#x27;] = &#x27;纸票&#x27; #空着的日期按照前一个来 销售数据[&#x27;日期&#x27;].fillna(method=&quot;ffill&quot;,inplace=True) #格式化日期，标记空日期 销售数据[&#x27;日期&#x27;] = 销售数据[&#x27;日期&#x27;].apply(lambda x:x.strftime(&#x27;%Y-%m-%d&#x27;) if x == x and type(x) != type(&#x27;sd&#x27;) else &#x27;日期为空&#x27;) 销售数据[&#x27;金额&#x27;] = 销售数据[&#x27;金额&#x27;].apply(lambda x:str(int(x)) if x == x else x) 转为列表1销售数据 = 销售数据.values.tolist() 合并相同数据将A栏重复值所对应的B栏数据合并 销售数据 A B C 数据A 1 5 数据A 2 5 数据B 1 5 12# 将A栏重复值所对应的B栏数据合并销售数据[&#x27;B&#x27;] = 销售数据.groupby(&#x27;A&#x27;)[&#x27;B&#x27;].transform(&#x27;,&#x27;.join) 销售数据-新| A | B | C || —– | —- | —- || 数据A | 1,2 | 5 || 数据A | 1,2 | 5 || 数据B | 1 | 5 | 之后可以去重","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"pandas","slug":"pandas","permalink":"https://zhongkangjk.github.io/tags/pandas/"}]},{"title":"写在django-admin里的异步爬虫按钮和日期计算","slug":"写在django-admin里的异步爬虫按钮","date":"2021-08-23T10:58:10.000Z","updated":"2022-04-26T14:50:03.666Z","comments":true,"path":"2021/08/23/写在django-admin里的异步爬虫按钮/","link":"","permalink":"https://zhongkangjk.github.io/2021/08/23/%E5%86%99%E5%9C%A8django-admin%E9%87%8C%E7%9A%84%E5%BC%82%E6%AD%A5%E7%88%AC%E8%99%AB%E6%8C%89%E9%92%AE/","excerpt":"用httpx的异步方法来更新requests的，快了一些","text":"用httpx的异步方法来更新requests的，快了一些 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145from django.contrib import adminfrom django.http import HttpResponsefrom import_export import resourcesfrom import_export.admin import ImportExportModelAdmin, ImportExportActionModelAdminfrom dateutil.relativedelta import relativedeltaimport json,requestsfrom cuifei.models import 催费表类,可收表19年,可收表20年,催费表22年类from shuju.models import 数据通知表类from utils.models import Dictionaryimport httpx,json,time,mathimport asyncio,datetime,calendarfrom django.forms import TextInput, Textareafrom django.db import modelsfrom django.db.models import Q#引入 Workbookfrom openpyxl import Workbookfrom django.http import HttpResponseadmin.site.site_header = &#x27;催费&#x27;admin.site.site_title = &#x27;催费&#x27;def 取结果(r): if r[&#x27;obj&#x27;]: j = [] for i in r[&#x27;obj&#x27;]: j.append(i[&#x27;fwqx&#x27;]) return max(j),r[&#x27;obj&#x27;][0][&#x27;jbrdh&#x27;] else: return None,Noneheaders = &#123; &#x27;Content-Type&#x27;: &#x27;application/json&#x27;, &#x27;Authorization&#x27;: &#x27;**************&#x27;,&#125;url_by_税号 = &#x27;************&#x27;查税号URL= &#x27;******************&#x27;@admin.register(催费表22年类)class 催费表22管理(ImportExportActionModelAdmin): list_display = (&#x27;公司名称***************&#x27;) search_fields = (&#x27;公司名称********************&#x27;) list_per_page = 20 date_hierarchy = &#x27;到期日&#x27; #时间导航栏 list_filter = (&#x27;区域&#x27;,&#x27;性质&#x27;,&#x27;到期日&#x27;,UpdatedAtFilter,) #筛选器 list_display_links = (&#x27;公司名称&#x27;,) #点击修改 formfield_overrides = &#123; models.CharField: &#123;&#x27;widget&#x27;: TextInput(attrs=&#123;&#x27;size&#x27;:&#x27;20&#x27;&#125;)&#125;, models.TextField: &#123;&#x27;widget&#x27;: Textarea(attrs=&#123;&#x27;rows&#x27;:1, &#x27;cols&#x27;:50&#125;)&#125;, &#125; actions = [&#x27;更新可收年份&#x27;,&#x27;更新到期日和时间&#x27;,&#x27;export_admin_action&#x27;] def get_actions(self, request): actions = super(催费表22管理,self).get_actions(request) print(actions) if request.user.username != &#x27;admin&#x27;: del actions[&#x27;更新到期日和时间&#x27;] return actions def 更新到期日和时间(modeladmin, request, queryset): async def 爬(client,body): def 保存结果(结果,body): body.到期日 = 结果[0] # body.经办人电话 = 结果[1] body.save(update_fields=[&#x27;到期日&#x27;]) r = await client.post(url_by_税号,headers=headers, data=json.dumps(&#123;&#x27;khsbh&#x27;: body.税号,&#125;),timeout=None) 结果 = 取结果(r.json()) if 结果[0]: 保存结果(结果,body) else: 用名称查的data = json.dumps(&#123;&#x27;count&#x27;:100,&#x27;keyword&#x27;: body.公司名称,&#x27;page&#x27;:0&#125;) r = await client.post(查税号URL,headers=headers, data=用名称查的data,timeout=None) res_dict = r.json() if res_dict[&#x27;obj&#x27;]: 税号1 = res_dict[&#x27;obj&#x27;][-1][&#x27;khsbh&#x27;] r1 = await client.post(url_by_税号,headers=headers, data=json.dumps(&#123;&#x27;khsbh&#x27;: 税号1,&#125;),timeout=None) 结果1 = 取结果(r1.json()) 保存结果(结果1,body) else: return None,None async def 跑(): async with httpx.AsyncClient() as client: task_list = [] for i in queryset: req = 爬(client,i) task = asyncio.create_task(req) task_list.append(task) await asyncio.gather(*task_list) start = time.time() asyncio.run(跑()) end = time.time() print(end-start) print(&#x27;查日期完成于&#x27;+time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())) def 更新可收年份(modeladmin, request, queryset): for i in queryset: if i.到期日: if type(i.到期日) == type(&#x27;s&#x27;): 到期日 = datetime.datetime.strptime(i.到期日,&#x27;%Y-%m-%d&#x27;).date() else: 到期日 = i.到期日 # print(i.公司名称,i.税号) a = 可收表19年.objects.filter(公司名称__exact = i.公司名称).count() if a &gt; 0: i.可收19 = 1 else: i.可收19 = 0 b = 可收表20年.objects.filter(Q(公司名称__exact = i.公司名称)|Q(税号__exact = i.税号)).count() if b &gt; 0: i.可收20 = 1 else: i.可收20 = 0 c = 催费表类.objects.filter(Q(公司名称__exact = i.公司名称)|Q(税号__exact = i.税号)).count() if c &gt; 0: i.可收21 = 1 else: i.可收21 = 0 # print(i.到期日) # print(datetime.date.today()) 年 = datetime.datetime.now().year 月 = datetime.datetime.now().month 下一个月 = (datetime.datetime.now()+relativedelta(months=1)).month # 日 = datetime.datetime.now().day # 新日 = calendar.monthrange(年,月)[1] 新日 = calendar.monthrange(年,下一个月)[1] # print(新日) # print(datetime.date(年,月,新日)==i.到期日) if datetime.date(年,下一个月,新日)==到期日: 差年= 1 else: 差年 = math.ceil((datetime.date(年,下一个月,新日)-到期日)/datetime.timedelta(days=365)) # print(差年) 到期日年份 = i.到期日.year 可收字典 = &#123;2015:1,2016:1,2017:1,2018:1,2019:i.可收19,2020:i.可收20,2021:i.可收21,2022:1&#125; # 年份 = sum(listn[:差年]) j = 0 for i1 in range(到期日年份,到期日年份+差年): # print(i1) j += 可收字典[i1] # print(j) i.几年 = j i.save(update_fields=[&#x27;可收19&#x27;,&#x27;可收20&#x27;,&#x27;可收21&#x27;,&#x27;几年&#x27;]) TIPSasyncio.run()和asyncio.create_task()这之类的函数要python3.7以后才能用","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"},{"name":"httpx","slug":"httpx","permalink":"https://zhongkangjk.github.io/tags/httpx/"},{"name":"datetime","slug":"datetime","permalink":"https://zhongkangjk.github.io/tags/datetime/"}]},{"title":"在windows添加webDAV网络位置","slug":"在windows添加webDAV网络位置","date":"2021-08-18T11:43:54.000Z","updated":"2021-08-18T11:48:53.060Z","comments":true,"path":"2021/08/18/在windows添加webDAV网络位置/","link":"","permalink":"https://zhongkangjk.github.io/2021/08/18/%E5%9C%A8windows%E6%B7%BB%E5%8A%A0webDAV%E7%BD%91%E7%BB%9C%E4%BD%8D%E7%BD%AE/","excerpt":"为了方便同步数据，特给Cloudreve所提供的webDAV加到我的windows上","text":"为了方便同步数据，特给Cloudreve所提供的webDAV加到我的windows上 修改注册表修改注册表计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\WebClient\\Parameters的BasicAuthLevel值为2，此意为同时支持同时支持http和https，默认只支持https 重启服务服务名称为webclient 添加在Windows资源管理器空白处右键，选添加一个网络位置，填写地址，用户名和密码即可","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"}],"tags":[{"name":"webDAV","slug":"webDAV","permalink":"https://zhongkangjk.github.io/tags/webDAV/"}]},{"title":"更改django-admin的TextField显示长宽度","slug":"更改django-admin的TextField显示长宽度","date":"2021-08-17T10:34:06.000Z","updated":"2021-08-17T10:43:13.625Z","comments":true,"path":"2021/08/17/更改django-admin的TextField显示长宽度/","link":"","permalink":"https://zhongkangjk.github.io/2021/08/17/%E6%9B%B4%E6%94%B9django-admin%E7%9A%84TextField%E6%98%BE%E7%A4%BA%E9%95%BF%E5%AE%BD%E5%BA%A6/","excerpt":"今天想把django-admin的TextField字段改成快速更改，但发现太大了，格格不入","text":"今天想把django-admin的TextField字段改成快速更改，但发现太大了，格格不入 代码123456789101112#在admin.py中from django.forms import TextInput, Textareafrom django.db import modelsclass YourModelAdmin(admin.ModelAdmin): formfield_overrides = &#123; models.CharField: &#123;&#x27;widget&#x27;: TextInput(attrs=&#123;&#x27;size&#x27;:&#x27;20&#x27;&#125;)&#125;, models.TextField: &#123;&#x27;widget&#x27;: Textarea(attrs=&#123;&#x27;rows&#x27;:1, &#x27;cols&#x27;:50&#125;)&#125;, &#125;admin.site.register(YourModel, YourModelAdmin) 备注给Textarea改成一行 长度50就差不多了得根据预览情况，多了也没试","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"}]},{"title":"批量把当前文件夹内的word文档转换为pdf","slug":"批量把当前文件夹内的word文档转换为pdf","date":"2021-08-13T13:51:00.000Z","updated":"2022-03-23T06:28:28.265Z","comments":true,"path":"2021/08/13/批量把当前文件夹内的word文档转换为pdf/","link":"","permalink":"https://zhongkangjk.github.io/2021/08/13/%E6%89%B9%E9%87%8F%E6%8A%8A%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E5%86%85%E7%9A%84word%E6%96%87%E6%A1%A3%E8%BD%AC%E6%8D%A2%E4%B8%BApdf/","excerpt":"批量把当前文件夹内的word文档转换为pdf","text":"批量把当前文件夹内的word文档转换为pdf 代码1234567891011121314151617181920from win32com.client import Dispatchfrom os import walk,getcwddef doc2pdf(input_file): word = Dispatch(&#x27;Word.Application&#x27;) doc = word.Documents.Open(input_file) doc.SaveAs(input_file.replace(&quot;.doc&quot;, &quot;.pdf&quot;), FileFormat=17) doc.Close() word.Quit()if __name__ == &quot;__main__&quot;: doc_files = [] directory = getcwd() for root, dirs, filenames in walk(directory): for file in filenames: if file.endswith(&quot;.doc&quot;) or file.endswith(&quot;.docx&quot;): print(file) doc2pdf(str(root + &quot;\\\\&quot; + file)) 备注其中SaveAs中第二个参数FileFormat=17是指定保存文档时使用的格式，17是PDF 以下是参考 1234567891011121314151617181920212223242526WdSaveFormat 枚举 指定要在保存文档时使用的格式。 版本信息 已添加版本： 名称 值 说明 wdFormatDocument 0 Microsoft Word 格式。 wdFormatDOSText 4 Microsoft DOS 文本格式。 wdFormatDOSTextLineBreaks 5 Microsoft DOS 文本格式，并且保留换行符。 wdFormatEncodedText 7 编码文本格式。 wdFormatFilteredHTML 10 筛选的 HTML 格式。 wdFormatHTML 8 标准 HTML 格式。 wdFormatRTF 6 RTF 格式。 wdFormatTemplate 1 Word 模板格式。 wdFormatText 2 Microsoft Windows 文本格式。 wdFormatTextLineBreaks 3 Windows 文本格式，并且保留换行符。 wdFormatUnicodeText 7 Unicode 文本格式。 wdFormatWebArchive 9 Web 档案格式。 wdFormatXML 11 可扩展标记语言 (XML) 格式。 wdFormatDocument97 0 Microsoft Word 97 文档格式。 wdFormatDocumentDefault 16 Word 默认文档文件格式。对于 Word 2010，这是 DOCX 格式。 wdFormatPDF 17 PDF 格式。 wdFormatTemplate97 1 Word 97 模板格式。 wdFormatXMLDocument 12 XML 文档格式。 wdFormatXMLDocumentMacroEnabled 13 启用了宏的 XML 文档格式。 wdFormatXMLTemplate 14 XML 模板格式。 wdFormatXMLTemplateMacroEnabled 15 启用了宏的 XML 模板格式。 wdFormatXPS 18 XPS 格式。 文档网址 https://docs.microsoft.com/zh-cn/office/vba/api/word.wdsaveformat","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"word","slug":"word","permalink":"https://zhongkangjk.github.io/tags/word/"},{"name":"pdf","slug":"pdf","permalink":"https://zhongkangjk.github.io/tags/pdf/"}]},{"title":"centos8安装python3.7","slug":"centos8安装python3-7","date":"2021-08-10T13:42:18.000Z","updated":"2022-03-23T06:33:12.243Z","comments":true,"path":"2021/08/10/centos8安装python3-7/","link":"","permalink":"https://zhongkangjk.github.io/2021/08/10/centos8%E5%AE%89%E8%A3%85python3-7/","excerpt":"因为得在破腾讯的轻量上安装python3.7，不太好弄找了个攻略","text":"因为得在破腾讯的轻量上安装python3.7，不太好弄找了个攻略 1、执行以下命令，更新yum源 1yum update 2、安装依赖包 1yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel libffi-devel gcc make 3、下载安装包 1wget https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tar.xz 4、解压 1tar -xf Python-3.7.6.tar.xz 5、编译安装 12345678910#创建安装目录mkdir /usr/local/python-3.7.6#进入安装目录cd Python-3.7.6#配置编译的路径./configure --prefix=/usr/local/python3.7.6 --with-ssl#按提示继续命令./configure --enable-optimizations#开始编译make &amp;&amp; make install 6、验证是否成功 12python3 -Vpip3 -V 原文链接：https://blog.csdn.net/ispeasant/article/details/107791316","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"linux","slug":"计算机/linux","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/linux/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"linux","slug":"linux","permalink":"https://zhongkangjk.github.io/tags/linux/"}]},{"title":"自己备份django数据库的每天发邮件设置","slug":"自己备份django数据库的每天发邮件设置","date":"2021-07-26T13:26:13.000Z","updated":"2022-03-23T06:29:01.916Z","comments":true,"path":"2021/07/26/自己备份django数据库的每天发邮件设置/","link":"","permalink":"https://zhongkangjk.github.io/2021/07/26/%E8%87%AA%E5%B7%B1%E5%A4%87%E4%BB%BDdjango%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%AF%8F%E5%A4%A9%E5%8F%91%E9%82%AE%E4%BB%B6%E8%AE%BE%E7%BD%AE/","excerpt":"用的单文件sq3比较好复制于是直接用邮件发送的方式来备份","text":"用的单文件sq3比较好复制于是直接用邮件发送的方式来备份 1234567891011121314151617181920212223242526272829303132333435363738394041import smtplibfrom email.mime.multipart import MIMEMultipartfrom email.mime.text import MIMETextfrom email.mime.application import MIMEApplicationimport os,datetime_user = &quot;---&quot;_pwd = &quot;---&quot;_to = &quot;---&quot;today = datetime.date.today().strftime(&#x27;%y%m%d&#x27;)msg = MIMEMultipart()msg[&quot;Subject&quot;] = today+&#x27;数据库备份&#x27;msg[&quot;From&quot;] = _usermsg[&quot;To&quot;] = _topart = MIMEText(&#x27;这是&#x27;+ today + &#x27;份的数据文件&#x27;)msg.attach(part)#---这是附件部分---for name in os.listdir(): if &quot;db.sqlite3&quot; in name : part = MIMEApplication(open(name,&#x27;rb&#x27;).read()) part.add_header(&#x27;Content-Disposition&#x27;, &#x27;attachment&#x27;, filename=today+&#x27;.sqlite3&#x27;) msg.attach(part) breaks = smtplib.SMTP(&quot;smtp.qq.com&quot;, timeout=60)try: s.login(_user, _pwd) s.sendmail(_user, _to, msg.as_string()) s.close() print(&quot;发送成功&quot;)except: print(&quot;发送失败&quot;)# 同文件夹下发送邮件.sh内容&#x27;&#x27;&#x27;#!/bin/bashcd /home/sites/173.82.120.157/MasterYi_Django_blog&amp;&amp;python3 发送邮件.pycrontab -e19 1 * * * sh /home/sites/173.82.120.157/MasterYi_Django_blog/发送邮件.sh&#x27;&#x27;&#x27;","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"}]},{"title":"python小功能操作合集","slug":"python小功能操作合集","date":"2021-07-26T13:07:31.000Z","updated":"2022-03-23T06:31:57.076Z","comments":true,"path":"2021/07/26/python小功能操作合集/","link":"","permalink":"https://zhongkangjk.github.io/2021/07/26/python%E5%B0%8F%E5%8A%9F%E8%83%BD%E6%93%8D%E4%BD%9C%E5%90%88%E9%9B%86/","excerpt":"记录一些python常用的小功能模块使用","text":"记录一些python常用的小功能模块使用 发送邮件及附件12345678910111213141516171819202122232425262728import smtplibfrom email.mime.multipart import MIMEMultipartfrom email.mime.text import MIMETextfrom email.mime.application import MIMEApplicationdef 发送邮件(邮件标题,称呼,邮件文字,发件人邮箱,密码,收件人邮箱,附件路径列表,附件命名列表): msg = MIMEMultipart() msg[&quot;Subject&quot;] = 邮件标题 msg[&quot;From&quot;] = 发件人邮箱 msg[&quot;To&quot;] = 称呼 #这是文字部分 part = MIMEText(邮件文字) msg.attach(part) #这是附件部分 for 附件路径,附件命名 in zip(附件路径列表,附件命名列表): part = MIMEApplication(open(附件路径,&#x27;rb&#x27;).read()) part.add_header(&#x27;Content-Disposition&#x27;, &#x27;attachment&#x27;, filename=附件命名) msg.attach(part) s = smtplib.SMTP(&quot;smtp.qq.com&quot;, timeout=60)#SMTP服务的网址 try: s.login(发件人邮箱, 密码) s.sendmail(发件人邮箱, 收件人邮箱, msg.as_string())#收件人邮箱可以是列表 s.close() print(&quot;发送成功&quot;) except: print(&quot;发送失败&quot;) win32操作相关的123456789101112131415161718192021222324252627282930313233343536import win32gui,win32con,win32api# 操作win32相关def 点击(id): win32gui.SendMessage(id,win32con.WM_LBUTTONDOWN, 0,0) win32gui.PostMessage(id,win32con.WM_LBUTTONUP, 0,0)def 填信息(id,text): win32gui.SendMessage(id,win32con.WM_SETTEXT, 0,text)def 发送回车(id): win32gui.SendMessage(id,win32con.WM_KEYDOWN, win32con.VK_RETURN,0) win32gui.PostMessage(id,win32con.WM_KEYUP, win32con.VK_RETURN,0)def 列出子窗口句柄(id): hwndChildList = [] win32gui.EnumChildWindows(id, lambda hwnd,param: param.append(hwnd),hwndChildList) n = 0 for i in hwndChildList: print(i ,&quot;&#123;:#016X&#125;&quot;.format(i),win32gui.GetWindowText(i),n) n += 1 return hwndChildListdef 获得窗口标题的句柄(name): hwndChildList = [] win32gui.EnumChildWindows(None, lambda hwnd,param: param.append(hwnd),hwndChildList) for i in hwndChildList: if name in win32gui.GetWindowText(i): return idef 提取句柄文本(句柄): # 获取识别结果中输入框文本 length = win32gui.SendMessage(句柄, win32con.WM_GETTEXTLENGTH)+1 buf = win32gui.PyMakeBuffer(length) #发送获取文本请求 win32api.SendMessage(句柄, win32con.WM_GETTEXT, length, buf) #下面应该是将内存读取文本 address, length = win32gui.PyGetBufferAddressAndLen(buf[:-1]) text = win32gui.PyGetString(address, length) return text#print(提取句柄文本(列出子窗口句柄(获得窗口标题的句柄(&#x27;来电接听&#x27;))[41])) 连续点击数据的tkinter1234567891011121314151617181920212223242526272829303132333435363738from tkinter import *from tkinter import ttkdef 连续点击tkinter(): 表1 = [1,2,3] 表2 = [4,5,6] 表3 = [7,8,9] 表 = [表1,表2,表3] def 选表(): players[&quot;values&quot;] = 表[var.get()-1] players.current(0) #默认第一个开始 def 执行查找(*args): #使用players.get() #然后自增 players.set(players[&quot;values&quot;][players[&quot;values&quot;].index(players.get())+1]) root = Tk() var = IntVar() var.set(1) name = StringVar() root.wm_attributes(&#x27;-topmost&#x27;,1) 单选框1 = Radiobutton(root, text=&quot;表1&quot;, value=1, variable=var, command = 选表).pack() 单选框2 = Radiobutton(root, text=&quot;表2&quot;, value=2, variable=var, command = 选表).pack() 单选框2 = Radiobutton(root, text=&quot;表3&quot;, value=3, variable=var, command = 选表).pack() players = ttk.Combobox(root, textvariable=name,width=50) players[&quot;values&quot;] = 表1 players[&quot;state&quot;] = &quot;readonly&quot; players.current(0) # players.set(&quot;演员表&quot;) # print(players.get()) players.pack() Button(root,text = &quot;点击查询&quot;,command = 执行查找,width=50,height=20).pack() root.mainloop() 爬虫获取post接口数据12345678910111213141516171819202122232425262728293031import jsonimport requestsdef 爬虫获取post数据(): postUrl = &#x27;&#x27; # 请求头设置 payloadHeader = &#123; &#x27;Host&#x27;: &#x27;&#x27;, &#x27;Origin&#x27;: &#x27;&#x27;, #&#x27;Cookie&#x27;: &#x27;&#x27;, &#x27;Referer&#x27;: &#x27;&#x27;, &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36&#x27;, &#x27;Content-Type&#x27;: &#x27;application/json&#x27;, &#x27;Content-Length&#x27;: &#x27;32&#x27;, &#x27;Connection&#x27;: &#x27;keep-alive&#x27;, &#x27;Authorization&#x27;: &#x27;bearer eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NDE1OTQ4NjAsInN1YiI6ImJ3eWRiZyJ9.t_XDqE2CaCSxg_Mtw5BrgUCTFpjpmU9oyI32oGPO9wY&#x27;, &#x27;Accept-Language&#x27;: &#x27;zh-CN,zh;q=0.9&#x27;, &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;, &#x27;Accept&#x27;: &#x27;application/json, text/plain, */*&#x27;, &#125; # 下载超时 timeOut = 25 # payloadData数据 payloadData = &#123; &#x27;&#x27;: &quot;&quot; &#125; dumpJsonData = json.dumps(payloadData) res = requests.post(postUrl, data=dumpJsonData, headers=payloadHeader, timeout=timeOut, allow_redirects=False) res_dict = eval(res.text) 信息列表 = [] #123123 return 信息列表 selenium相关操作1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162from selenium.webdriver.chrome.options import Options# chrome_options = Options()# #chrome_options.add_experimental_option(&quot;debuggerAddress&quot;, &quot;127.0.0.1:9222&quot;)# chrome_driver = &quot;chromedriver.exe&quot;# driver = webdriver.Chrome(chrome_driver, chrome_options=chrome_options)from selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.common.keys import Keysfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support.expected_conditions import presence_of_element_locatedimport time# driver.find_elements_by_id(&quot;cheddar&quot;)# driver.find_element_by_css_selector(&quot;#cheese #cheddar&quot;)# driver.find_elements_by_class_name()# driver.find_element_by_xpath()# driver..find_element_by_link_text(&quot;新闻&quot;)def 例子(): with webdriver.Chrome() as driver: wait = WebDriverWait(driver, 10 , 0.5) #显式等待 until / until_not driver.implicitly_wait(10) #隐性等待 driver.get(&quot;https://www.baidu.com&quot;) #发送请求 #driver.refresh() #刷新浏览器 #driver.set_window_size(1400,800) #设置浏览器大小 driver.maximize_window() #浏览器窗口最大化 driver.find_element_by_id(&quot;kw&quot;).send_keys(&quot;selenium&quot;,Keys.ENTER) #driver.find_element_by_id(&quot;su&quot;).click() time.sleep(10) first_result = wait.until(presence_of_element_located((By.CSS_SELECTOR, &quot;h3&gt;div&quot;))) #print(first_result.get_attribute(&quot;textContent&quot;))def 综合(): #先快捷方式后加&#x27; --remote-debugging-port=9222 --user-data-dir=&quot;C:\\selenum\\AutomationProfile&quot; https://live.bwjf.com/dashboard&#x27;打开浏览器 chrome_options = Options() chrome_options.add_experimental_option(&quot;debuggerAddress&quot;, &quot;127.0.0.1:9222&quot;) chrome_driver = r&quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chromedriver.exe&quot; driver = webdriver.Chrome(chrome_driver, chrome_options=chrome_options) driver.implicitly_wait(10) def 点击按钮(按钮位置): time.sleep(0.2) driver.find_element_by_xpath(按钮位置).click() def 填写内容(按钮位置,内容): driver.find_element_by_xpath(按钮位置).send_keys(内容) def 选择下拉框(按钮位置,选项): 点击按钮(按钮位置) time.sleep(0.1) 点击选项 = driver.find_element_by_xpath(&#x27;&#x27;&#x27;//span[text()=&quot;&#x27;&#x27;&#x27;+选项+&#x27;&#x27;&#x27;&quot;]&#x27;&#x27;&#x27;) print(点击选项) 点击选项.click() def 选择下拉框特殊(按钮位置,选项): 点击按钮(按钮位置) time.sleep(0.1) 点击选项 = driver.find_element_by_css_selector(&#x27;body &gt; div.el-select-dropdown.el-popper &gt; div.el-scrollbar &gt; div.el-select-dropdown__wrap.el-scrollbar__wrap &gt; ul &gt; li.el-select-dropdown__item:nth-child(2)&#x27;) 点击选项.click() def 输入后选择下拉框(按钮位置,内容和选项): 填写内容(按钮位置,内容和选项) print(&#x27;&#x27;&#x27;//span[text()=&quot;&#x27;&#x27;&#x27;+内容和选项+&#x27;&#x27;&#x27;&quot;]&#x27;&#x27;&#x27;) time.sleep(0.1) 选项出现 = driver.find_element_by_xpath(&#x27;&#x27;&#x27;//span[text()=&quot;&#x27;&#x27;&#x27;+内容和选项+&#x27;&#x27;&#x27;&quot;]&#x27;&#x27;&#x27;) time.sleep(0.5) 选项出现.click() django导入库数据1234567891011121314151617181920212223242526import os,sys,django,xlrd# 本文件在manage.py同文件夹下def django导入库数据(): 文件名 = &#x27;表.xls&#x27; 读取的Excel = xlrd.open_workbook(filename = 文件名) 文件内第一个表= 读取的Excel.sheet_by_index(0) # def 获得列序号(表名,查找字段名): # 列序号 = None # for i in range(表名.ncols): # if (表名.cell_value(0,i) == 查找字段名): # 列序号 = i # break # return 列序号 #竖向资料 = [文件内第一个表.col_values(i) for i in range(文件内第一个表.ncols)] 横向资料 = [文件内第一个表.row_values(i) for i in range(1,文件内第一个表.nrows)] project_path = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) sys.path.append(project_path) os.environ[&#x27;DJANGO_SETTINGS_MODULE&#x27;] = &#x27;shuai.settings&#x27; django.setup() from APP名称.models import 模型类名 list = [] for i in 横向资料: list.append(模型类名(字段1 = i[0],字段2 = i[1],字段3 = i[2],字段4 = i[3])) 模型类名.objects.bulk_create(list) 返回文件绝对路径123456789101112import os,sysdef 返回文件绝对路径(当前路径文件名): if hasattr(sys, &#x27;_MEIPASS&#x27;): # PyInstaller会创建临时文件夹temp # 并把路径存储在_MEIPASS中 base_path = sys._MEIPASS else: base_path = os.path.abspath(&#x27;.&#x27;) return os.path.join(base_path, 当前路径文件名)#print(返回文件绝对路径(&#x27;list1.py&#x27;)) 返回当前路径第一个包含名字的文件12345678910import osdef 返回当前路径第一个包含名字的文件(名字): namelist = os.listdir(os.getcwd()) for x in namelist: if 名字 in x and &#x27;$&#x27; not in x: 路径 = x return 路径 break#print(返回当前路径第一个包含名字的文件(&#x27;lis&#x27;)) xlrd打开excel文件12345678910111213141516171819202122232425262728293031import xlrdclass 打开excel文件(): def __init__(self,文件名,第几个表): self.文件 = xlrd.open_workbook(filename = 文件名) self.表 = self.文件.sheet_by_index(第几个表-1) def 获得横向资料(self): self.数据 = [self.表.row_values(i) for i in range(self.表.nrows)] return self.数据 def 获得纵向资料(self): self.数据 = [self.表.col_values(i) for i in range(self.表.ncols)] return self.数据 def 获得名称列数据(self,名称): def 获得列序号(表名,查找字段名): 列序号 = None for i in range(表名.ncols): if (表名.cell_value(0,i) == 查找字段名): 列序号 = i break return 列序号 print(获得列序号(self.表,名称)) self.数据 = self.表.col_values(获得列序号(self.表,名称),1) return self.数据# 文件 = 打开excel文件(&#x27;测试.xlsx&#x27;,1)# print(文件.获得名称列数据(&#x27;地址&#x27;)) 列表取第一个电话1234567891011121314import redef 列表取第一个电话(list1): list2 = [] for i in list1: for j in i: if re.match(r&quot;^1\\d&#123;10&#125;$&quot;, j): list2.append(j) break else: list2.append(&#x27;mei&#x27;) return list2#list1 = [[&#x27;123&#x27;,&#x27;13210000000&#x27;,&#x27;13210000000&#x27;],[&#x27;159&#x27;,&#x27;15988886666&#x27;],[&#x27;123&#x27;]]#print(列表取第一个电话(list1)) 求列表元素出现次数字典12345def 求列表元素出现次数字典(list): 结果 = &#123;&#125; for i in set(list): 结果[i] = list.count(i) return 结果 openpyxl写新文件12345678910111213141516171819202122232425262728import openpyxlfrom openpyxl.styles import Alignment, Fontdef openpyxl写新文件(): 填充的数据列表 = [] 结果文件 = openpyxl.Workbook() 表1 = 结果文件.active 表1.title = &#x27;表1&#x27; 表1.merge_cells(start_row=1, start_column=1, end_row=1, end_column=6) 表1.cell(1, 1).value = &#x27;这里我就写个字&#x27; 标题 = 表1[&#x27;A1&#x27;] 标题.font = Font(name = &#x27;黑体&#x27;,size = 20) 标题.alignment = Alignment(horizontal=&#x27;center&#x27;, vertical=&#x27;center&#x27;) 表1.column_dimensions[&#x27;B&#x27;].width = 33 表1.column_dimensions[&#x27;C&#x27;].width = 11 for i in 填充的数据列表: 表1.append(i) 表2 = 结果文件.create_sheet(&#x27;表2&#x27;) 表2.append(&#x27;数据&#x27;) 结果文件.save(&#x27;结果文件.xlsx&#x27;)","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"邮件","slug":"邮件","permalink":"https://zhongkangjk.github.io/tags/%E9%82%AE%E4%BB%B6/"},{"name":"win32","slug":"win32","permalink":"https://zhongkangjk.github.io/tags/win32/"},{"name":"tkinter","slug":"tkinter","permalink":"https://zhongkangjk.github.io/tags/tkinter/"},{"name":"selenium","slug":"selenium","permalink":"https://zhongkangjk.github.io/tags/selenium/"},{"name":"爬虫","slug":"爬虫","permalink":"https://zhongkangjk.github.io/tags/%E7%88%AC%E8%99%AB/"},{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"},{"name":"excel","slug":"excel","permalink":"https://zhongkangjk.github.io/tags/excel/"}]},{"title":"记录一些神奇的前端代码","slug":"记录一些神奇的前端代码","date":"2021-07-25T14:57:54.000Z","updated":"2022-03-23T06:28:02.932Z","comments":true,"path":"2021/07/25/记录一些神奇的前端代码/","link":"","permalink":"https://zhongkangjk.github.io/2021/07/25/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%BA%9B%E7%A5%9E%E5%A5%87%E7%9A%84%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81/","excerpt":"虽然我看不懂，但是要记下来","text":"虽然我看不懂，但是要记下来 CSS一个彩色的背景1background: radial-gradient(200% 100% at top center, #f7f7b6, #e96f92, #75517d, #1b2947);","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"前端","slug":"计算机/前端","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://zhongkangjk.github.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"自己常用的Linux系统操作命令","slug":"自己常用的Linux系统操作命令","date":"2021-07-25T14:30:54.000Z","updated":"2022-03-23T06:33:44.078Z","comments":true,"path":"2021/07/25/自己常用的Linux系统操作命令/","link":"","permalink":"https://zhongkangjk.github.io/2021/07/25/%E8%87%AA%E5%B7%B1%E5%B8%B8%E7%94%A8%E7%9A%84Linux%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/","excerpt":"记录一下，方便使用","text":"记录一下，方便使用 开关uwsgi-django网站关闭uwsgi服务12345678ps ax | grep uwsgi得到类似15005 pts/4 S 0:00 /ve/path/bin/uwsgi --ini config.ini15006 pts/4 S 0:00 /ve/path/bin/uwsgi --ini config.ini15007 pts/4 S 0:00 /ve/path/bin/uwsgi --ini config.ini地址是/ve/path/bin/uwsgi杀死killall -s INT /ve/path/bin/uwsgi 到对应目录开启虚拟环境1cd /www/wwwroot/shuai4-django-env&amp;&amp;source bin/activate 用配置文件启动1uwsgi -d --ini shuai4-django.ini 更新以后的开启重载关闭uwsgi方式123456#开启/www/wwwroot/shuai4-django-env3.7/bin/uwsgi -d --ini /www/wwwroot/shuai4-django-env3.7/shuai4-django.ini --log-reopen#重载/www/wwwroot/shuai4-django-env3.7/bin/uwsgi --reload /www/wwwroot/shuai4-django-env3.7/uwsgi.pid#关闭/www/wwwroot/shuai4-django-env3.7/bin/uwsgi --stop /www/wwwroot/shuai4-django-env3.7/uwsgi.pid 部署uwsgi-django网站时用到的导出导入包1234#导出pip freeze &gt; requirements.txt#导入pip install -r requirements.txt debian安装pip1sudo apt-get install python3-pip 安装虚拟环境包1pip3 install virtualenv 创建文件夹1mkdir /var/www 移动到该文件夹1cd /var/www 创建虚拟环境1virtualenv studyapi 进入虚拟环境1source studyapi/bin/activate 安装7z1apt install p7zip-full 解压项目到当前文件夹17z x dwebsite.zip 解压项目到当前文件夹17z x dwebsite.zip uwsgi配置文件12345678910[uwsgi]chdir =/www/wwwroot/shuai4-django-env/shuai4-djangomodule =shuai4.wsgihome =/www/wwwroot/shuai4-django-env/master =trueprocesses =4socket =127.0.0.1:9090chmod-socket = 666vacuum = truepidfile=uwsgi.pid nginx配置文件12345678910111213141516server&#123; listen 8097; server_name 49.232.5.6; location /static &#123; alias /www/wwwroot/shuai4-django-env/shuai4-django/collected_static; &#125; location / &#123; uwsgi_pass 127.0.0.1:9090; include /www/server/panel/vhost/nginx/uwsgi_params; client_max_body_size 20m; &#125; access_log /www/wwwlogs/49.232.5.6.log; error_log /www/wwwlogs/49.232.5.6.error.log;&#125;","categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"linux","slug":"计算机/linux","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://zhongkangjk.github.io/tags/linux/"},{"name":"uwsgi","slug":"uwsgi","permalink":"https://zhongkangjk.github.io/tags/uwsgi/"},{"name":"django部署","slug":"django部署","permalink":"https://zhongkangjk.github.io/tags/django%E9%83%A8%E7%BD%B2/"},{"name":"nginx","slug":"nginx","permalink":"https://zhongkangjk.github.io/tags/nginx/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-07-21T12:44:04.767Z","updated":"2021-07-24T13:50:20.811Z","comments":true,"path":"2021/07/21/hello-world/","link":"","permalink":"https://zhongkangjk.github.io/2021/07/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"计算机","slug":"计算机","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"python","slug":"计算机/python","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/python/"},{"name":"django","slug":"计算机/django","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/django/"},{"name":"linux","slug":"计算机/linux","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/linux/"},{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/categories/%E9%9A%8F%E7%AC%94/"},{"name":"前端","slug":"计算机/前端","permalink":"https://zhongkangjk.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%89%8D%E7%AB%AF/"},{"name":"游戏","slug":"游戏","permalink":"https://zhongkangjk.github.io/categories/%E6%B8%B8%E6%88%8F/"},{"name":"神武","slug":"游戏/神武","permalink":"https://zhongkangjk.github.io/categories/%E6%B8%B8%E6%88%8F/%E7%A5%9E%E6%AD%A6/"}],"tags":[{"name":"django","slug":"django","permalink":"https://zhongkangjk.github.io/tags/django/"},{"name":"uwsgi","slug":"uwsgi","permalink":"https://zhongkangjk.github.io/tags/uwsgi/"},{"name":"nginx","slug":"nginx","permalink":"https://zhongkangjk.github.io/tags/nginx/"},{"name":"linux","slug":"linux","permalink":"https://zhongkangjk.github.io/tags/linux/"},{"name":"随笔","slug":"随笔","permalink":"https://zhongkangjk.github.io/tags/%E9%9A%8F%E7%AC%94/"},{"name":"python","slug":"python","permalink":"https://zhongkangjk.github.io/tags/python/"},{"name":"uniapp","slug":"uniapp","permalink":"https://zhongkangjk.github.io/tags/uniapp/"},{"name":"pdf","slug":"pdf","permalink":"https://zhongkangjk.github.io/tags/pdf/"},{"name":"爬虫","slug":"爬虫","permalink":"https://zhongkangjk.github.io/tags/%E7%88%AC%E8%99%AB/"},{"name":"前端","slug":"前端","permalink":"https://zhongkangjk.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"神武","slug":"神武","permalink":"https://zhongkangjk.github.io/tags/%E7%A5%9E%E6%AD%A6/"},{"name":"pandas","slug":"pandas","permalink":"https://zhongkangjk.github.io/tags/pandas/"},{"name":"httpx","slug":"httpx","permalink":"https://zhongkangjk.github.io/tags/httpx/"},{"name":"datetime","slug":"datetime","permalink":"https://zhongkangjk.github.io/tags/datetime/"},{"name":"webDAV","slug":"webDAV","permalink":"https://zhongkangjk.github.io/tags/webDAV/"},{"name":"word","slug":"word","permalink":"https://zhongkangjk.github.io/tags/word/"},{"name":"邮件","slug":"邮件","permalink":"https://zhongkangjk.github.io/tags/%E9%82%AE%E4%BB%B6/"},{"name":"win32","slug":"win32","permalink":"https://zhongkangjk.github.io/tags/win32/"},{"name":"tkinter","slug":"tkinter","permalink":"https://zhongkangjk.github.io/tags/tkinter/"},{"name":"selenium","slug":"selenium","permalink":"https://zhongkangjk.github.io/tags/selenium/"},{"name":"excel","slug":"excel","permalink":"https://zhongkangjk.github.io/tags/excel/"},{"name":"django部署","slug":"django部署","permalink":"https://zhongkangjk.github.io/tags/django%E9%83%A8%E7%BD%B2/"}]}